{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///detector.js","webpack:///webpack/bootstrap bfe0aa61ec66765bf406","webpack:///./index.js","webpack:///../~/webpack/buildin/module.js","webpack:///./Detector.js","webpack:///../~/bowser/src/bowser.js","webpack:///../~/feature-js/feature.min.js","webpack:///../~/platform/platform.js","webpack:///../~/webpack/buildin/amd-define.js","webpack:///external {\"root\":\"Æ’\",\"commonjs\":\"flavor-js\",\"commonjs2\":\"flavor-js\",\"amd\":\"flavor-js\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_Detector","_Detector2","global","document","w","Error","window","undefined","detector","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","_platform","_platform2","_featureJs","_featureJs2","_bowser","_bowser2","_flavorJs","_flavorJs2","navigator","ua","Detector","Object","defineProperty","value","defineProperties","target","props","i","descriptor","length","enumerable","configurable","writable","key","protoProps","staticProps","userAgent","platform","getPlatform","os","getOS","browser","getBrowser","features","getFeatures","audio","getAudio","inherit","description","manufacturer","desktop","mobile","tablet","phone","e","o","architecture","name","family","version","osversion","android","bada","blackberry","chromeOS","chromeos","firefoxOS","firefoxos","iOS","ios","linux","contains","macOS","test","mac","sailfish","tizen","windows","windowsPhone","windowsphone","b","webApp","standalone","engine","blink","layout","gecko","trident","msie","edgeHTML","msedge","webkit","arora","chrome","chromeMobile","cocoonJS","isCocoonJS","edge","ejecta","electron","epiphany","firefox","firefoxMobile","ie","ieMobile","midori","opera","operaMobile","phantom","safari","safariMobile","seamonkey","samsung","samsungBrowser","silk","webOS","webos","audioElement","a","audioData","Audio","webAudio","webkitAudioContext","AudioContext","createElement","canPlayType","ogg","replace","opus","mp3","wav","m4a","webm","f","hasCSS3D","el","body","insertBefore","each","t","style","getComputedStyle","getPropertyValue","removeChild","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","WebGLRenderingContext","getContext","error","vibrate","webkitVibrate","mozVibrate","msVibrate","async","addEventListener","canvas","classList","cors","contextMenu","css3D","checkFeature","css3Dtransform","cssTransform","cssTransition","defer","file","File","FileReader","FileList","Blob","fileSystem","requestFileSystem","fullscreen","geolocation","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","historyAPI","littleEndian","Int8Array","Int16Array","buffer","localStorage","matchMedia","motion","deviceMotion","mspointer","msPointerEnabled","pointerEnabled","orientation","deviceOrientation","pictureElement","pixelRatio","devicePixelRatio","placeholder","pointerLock","querySelectorAll","quirksMode","compatMode","remUnit","serviceWorker","sizes","srcset","svg","touch","documentElement","maxTouchPoints","typedArray","vibration","viewportUnit","webGL","worker","Worker","definition","detect","getFirstMatch","regex","match","getSecondMatch","getWindowsVersion","s","result","osVersion","osMajorVersion","iosdevice","toLowerCase","likeAndroid","nexusMobile","nexusTablet","edgeVersion","versionIdentifier","xbox","coast","yandexbrowser","ucbrowser","maxthon","puffin","sleipnir","kMeleon","chromeBook","vivaldi","slimer","touchpad","qupzilla","chromium","googlebot","split","x","getVersionPrecision","map","arr","Array","push","compareVersions","versions","precision","Math","max","chunks","delta","join","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","bowser","hasOwnProperty","String","check","browserList","browserItem","_detect","n","r","create","old","pfx","charAt","toUpperCase","substr","setItem","removeItem","history","width","createElementNS","createSVGRect","XMLHttpRequest","MSGesture","DocumentTouch","testAll","className","feature","__WEBPACK_AMD_DEFINE_RESULT__","capitalize","string","slice","cleanupOS","pattern","label","data","10.0","6.4","6.3","6.2","6.1","6.0","5.2","5.1","5.01","5.0","4.0","4.90","exec","RegExp","format","object","callback","index","maxSafeInteger","forOwn","trim","getClassOf","toString","isHostType","property","type","qualify","reduce","array","accumulator","parse","getLayout","guesses","guess","getManufacturer","product","getName","getProduct","getVersion","patterns","toStringPlatform","nav","isModuleScope","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","phantomClass","java","rhino","alpha","beta","doc","operaClass","arch","prerelease","useFeatures","isSpecialCasedOS","context","isCustomContext","thisBinding","oldRoot","environment","operamini","reOpera","Apple","iPad","iPhone","iPod","Archos","Amazon","Kindle","Kindle Fire","Asus","Transformer","Barnes & Noble","Nook","BlackBerry","PlayBook","Google","Google TV","Nexus","HP","TouchPad","HTC","LG","Microsoft","Xbox","Xbox One","Motorola","Xoom","Nintendo","Wii U","Wii","Nokia","Lumia","Samsung","Galaxy S","Galaxy S2","Galaxy S3","Galaxy S4","Sony","PlayStation","PlayStation Vita","unshift","indexOf","parseFloat","lang","System","getProperty","system","process","node","nw","runtime","flash","Capabilities","major","minor","patch","documentMode","toFixed","appMinorVersion","external","parseInt","cpuClass","objectProto","objectTypes","function","freeExports","freeModule","nodeType","freeGlobal","self","pow"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,cACA,kBAAAC,gBAAAC,IACAD,QAAA,aAAAJ,GACA,gBAAAC,SACAA,QAAA,eAAAD,EAAAG,QAAA,cAEAJ,EAAA,eAAAC,EAAAD,EAAA,OACCO,KAAA,SAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAT,WACAW,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAW,QAAA,EAGAX,EAAAD,QAvBA,GAAAU,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAUP,EAAQD,EAASQ,IAEJ,SAASP,GAAS,YAQ9C,SAASgB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAR3D,GAExBG,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUL,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXI,SAAyBJ,EAAIM,cAAgBF,QAAUJ,IAAQI,OAAOG,UAAY,eAAkBP,IE1DvQQ,EAAAlB,EAAA,GF8DKmB,EAAaV,EAAuBS,IE5DzC,SAAEE,EAAQ7B,GACa,WAAlBsB,EAAOpB,IAAiD,WAA1BoB,EAAOpB,EAAOD,SAM7CC,EAAOD,QAAU4B,EAAOC,SACtB9B,EAAQ6B,GAAQ,GAChB,SAACE,GACC,IAAIA,EAAED,SACJ,KAAUE,OAAM,+CAElB,OAAOhC,GAAQ+B,IAGnB/B,EAAQ6B,IAGS,mBAAXI,QAAyBA,OAAhCC,OAA+C,SAACD,GACjD,GAAIE,SASJ,OAPIF,GAAOE,SAITA,EAAWF,EAAOE,UAHlBA,EAAW,GAAAP,GAAAP,QACXY,EAAOE,SAAWA,GAKbA,MFgEqBrB,KAAKb,EAASQ,EAAoB,GAAGP,KAI7D,SAAUA,EAAQD,GGnGxBC,EAAAD,QAAA,SAAAC,GAQA,MAPAA,GAAAkC,kBACAlC,EAAAmC,UAAA,aACAnC,EAAAoC,SAEApC,EAAAqC,YACArC,EAAAkC,gBAAA,GAEAlC,IH2GM,SAAUA,EAAQD,EAASQ,GAEhC,YAwBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASqB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCA5B3G,GAQDC,GI3HLC,EJ+HKC,EI9HLC,EJkIKC,EIjILC,EJqIKC,EIpILC,EJwIKC,EItICC,EACAC,EAEeC,CJ+GpBC,QAAOC,eAAexD,EAAS,cAC7ByD,OAAO,IAGLd,EAAe,WAAc,QAASe,GAAiBC,EAAQC,GAAlC,GAAoDC,GAAoCC,CAA7C,KAASD,EAAI,EAAGA,EAAID,EAAMG,OAAQF,IAAWC,EAAaF,EAAMC,GAAIC,EAAWE,WAAaF,EAAWE,aAAc,EAAOF,EAAWG,cAAe,EAAU,SAAWH,KAAYA,EAAWI,UAAW,GAAMX,OAAOC,eAAeG,EAAQG,EAAWK,IAAKL,GAAiB,MAAO,UAAUrB,EAAa2B,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBjB,EAAYhB,UAAW2C,GAAiBC,GAAaX,EAAiBjB,EAAa4B,GAAqB5B,MI3HjiBG,EAAApC,EAAA,GJ+HKqC,EAAa5B,EAAuB2B,GI9HzCE,EAAAtC,EAAA,GJkIKuC,EAAc9B,EAAuB6B,GIjI1CE,EAAAxC,EAAA,GJqIKyC,EAAWhC,EAAuB+B,GIpIvCE,EAAA1C,EAAA,GJwIK2C,EAAalC,EAAuBiC,GItInCE,EAAYpB,OAAOoB,UACnBC,EAAKD,EAAUkB,UAEAhB,EJ4IL,WI3Id,QAAAA,KAAcf,EAAAlC,KAAAiD,GACZjD,KAAKkE,SAAWlE,KAAKmE,cACrBnE,KAAKoE,GAAKpE,KAAKqE,QACfrE,KAAKsE,QAAUtE,KAAKuE,aACpBvE,KAAKwE,SAAWxE,KAAKyE,cACrBzE,KAAK0E,MAAQ1E,KAAK2E,WJuXnB,MAtOArC,GAAaW,IACXa,IAAK,cACLV,MAAO,WI/IR,GAAMzC,KAEN,KAEEA,EAAEiE,SACAC,YAAarC,EAAAzB,QAAS8D,YACtBC,aAActC,EAAAzB,QAAS+D,aACvBC,SAAUnC,EAAA7B,QAAOiE,SAAWpC,EAAA7B,QAAOkE,OACnCC,MAAOtC,EAAA7B,QAAOiE,OACdC,OAAQrC,EAAA7B,QAAOkE,SAOjB,MAAOE,GACP,KAAMA,GAGR,MAAOxE,MJmJNmD,IAAK,QACLV,MAAO,WIhJR,GAAMgC,KAEN,KACEA,EAAER,SACAS,aAA2C,KAA7B7C,EAAAzB,QAASqD,GAAGiB,aAAsB,MAAQ,MACxDC,KAAM9C,EAAAzB,QAASqD,GAAGmB,OAClBC,QAAShD,EAAAzB,QAASqD,GAAGoB,SAAW5C,EAAA7B,QAAO0E,UACvCC,QAAS9C,EAAA7B,QAAO2E,SAAkC,YAAvBlD,EAAAzB,QAASqD,GAAGmB,OACvCI,KAAM/C,EAAA7B,QAAO4E,KACbC,WAAYhD,EAAA7B,QAAO6E,WACnBC,SAAUjD,EAAA7B,QAAO+E,SACjBC,UAAWnD,EAAA7B,QAAOiF,UAClBC,IAAKrD,EAAA7B,QAAOmF,KAA8B,QAAvB1D,EAAAzB,QAASqD,GAAGmB,OAC/BY,MAAOvD,EAAA7B,QAAOoF,QAAU,SAAU,SAAU,SAAU,UAAW,QAAQC,SAAS5D,EAAAzB,QAASqD,GAAGmB,QAC9Fc,MAAO,SAASC,KAAKtD,IAAOJ,EAAA7B,QAAOwF,MAAQ,OAAQ,SAASH,SAAS5D,EAAAzB,QAASqD,GAAGmB,QACjFiB,SAAU5D,EAAA7B,QAAOyF,SACjBC,MAAO7D,EAAA7B,QAAO0F,MACdC,QAAS9D,EAAA7B,QAAO2F,UAAY,UAAW,6BAA8B,8BAA+B,cAAcN,SAAS5D,EAAAzB,QAASqD,GAAGmB,QACvIoB,aAAc/D,EAAA7B,QAAO6F,cAAuC,kBAAvBpE,EAAAzB,QAASqD,GAAGmB,SAEnD,MAAOJ,GACP,KAAMA,GAGR,MAAOC,MJoJNtB,IAAK,aACLV,MAAO,WIjJR,GAAMyD,KAEN,KACEA,EAAEjC,SACAU,KAAM1C,EAAA7B,QAAOuE,MAAQ9C,EAAAzB,QAASuE,KAC9BE,QAAS5C,EAAA7B,QAAOyE,QAEhBsB,OAAQ/D,EAAUgE,WAClBC,QACEC,MAAOrE,EAAA7B,QAAOkG,OAA6B,UAApBzE,EAAAzB,QAASmG,OAChCC,MAAOvE,EAAA7B,QAAOoG,OAA6B,UAApB3E,EAAAzB,QAASmG,OAChCE,QAASxE,EAAA7B,QAAOsG,MAA4B,YAApB7E,EAAAzB,QAASmG,OACjCI,SAAU1E,EAAA7B,QAAOwG,QAA8B,aAApB/E,EAAAzB,QAASmG,OACpCM,OAAQ5E,EAAA7B,QAAOyG,QAA8B,WAApBhF,EAAAzB,QAASmG,QAEpCxB,QAAS9C,EAAA7B,QAAO2E,QAChB+B,MAAO,QAAQnB,KAAKtD,GACpB2C,KAAM/C,EAAA7B,QAAO4E,KACbC,WAAYhD,EAAA7B,QAAO6E,WACnB8B,OAAQ9E,EAAA7B,QAAO2G,QAAUlF,EAAAzB,QAASuE,KAAKc,SAAS,UAChDuB,aAAc/E,EAAA7B,QAAO2G,QAAU9E,EAAA7B,QAAOiE,QAA4B,kBAAlBxC,EAAAzB,QAASuE,KACzDsC,SAAU7E,EAAU8E,WACpBC,KAAMlF,EAAA7B,QAAOwG,QAA4B,mBAAlB/E,EAAAzB,QAASuE,KAChCyC,OAAiC,SAAlBpG,OAAOoG,OACtBC,SAA4B,aAAlBxF,EAAAzB,QAASuE,KACnB2C,SAAU,WAAW3B,KAAKtD,GAC1BkF,QAAStF,EAAA7B,QAAOmH,SAAW1F,EAAAzB,QAASuE,KAAKc,SAAS,WAClD+B,cAAevF,EAAA7B,QAAOmH,UAAY,kBAAmB,kBAAkB9B,SAAS5D,EAAAzB,QAASuE,MACzF8C,GAAIxF,EAAA7B,QAAOsG,MAAQ7E,EAAAzB,QAASuE,KAAKc,SAAS,MAC1CiC,SAAUzF,EAAA7B,QAAOsG,MAAQzE,EAAA7B,QAAOiE,QAA4B,cAAlBxC,EAAAzB,QAASuE,KACnDgD,OAAQ,SAAShC,KAAKtD,GACtBuF,MAAO3F,EAAA7B,QAAOwH,OAAS/F,EAAAzB,QAASuE,KAAKc,SAAS,SAC9CoC,YAAa5F,EAAA7B,QAAOwH,OAAS3F,EAAA7B,QAAOiE,SAAW,aAAc,gBAAgBoB,SAAS5D,EAAAzB,QAASuE,MAC/FmD,QAAS7F,EAAA7B,QAAO0H,SAA6B,cAAlBjG,EAAAzB,QAASuE,KACpCoD,OAAQ9F,EAAA7B,QAAO2H,QAAUlG,EAAAzB,QAASuE,KAAKc,SAAS,UAChDuC,aAAc,gBAAgBrC,KAAKtD,IAAOJ,EAAA7B,QAAO2H,QAAU9F,EAAA7B,QAAOmF,KAAOtD,EAAA7B,QAAOiE,QAAUxC,EAAAzB,QAASuE,KAAKc,SAAS,UACjHI,SAAU5D,EAAA7B,QAAOyF,SACjBoC,UAAWhG,EAAA7B,QAAO6H,WAA+B,cAAlBpG,EAAAzB,QAASuE,KACxCuD,QAASjG,EAAA7B,QAAO+H,eAChBC,KAAMnG,EAAA7B,QAAOgI,MAA0B,SAAlBvG,EAAAzB,QAASuE,KAC9BmB,MAAO7D,EAAA7B,QAAO0F,MACduC,MAAOpG,EAAA7B,QAAOkI,QAEhB,MAAO9D,GACP,KAAMA,GAGR,MAAO0B,MJqJN/C,IAAK,WACLV,MAAO,cI5IA8F,GANFC,GACJC,YAAczH,OAAO0H,MACrBC,YAAa3H,OAAO4H,qBAAsB5H,OAAO6H,cAGnD,KACQN,EAAe1H,SAASiI,cAAc,SAEtCP,EAAaQ,aACjBP,EAAEvE,SACA+E,IAAKT,EAAaQ,YAAY,8BAA8BE,QAAQ,OAAQ,IAC5EC,KAAMX,EAAaQ,YAAY,4BAA4BE,QAAQ,OAAQ,IAC3EE,IAAKZ,EAAaQ,YAAY,eAAeE,QAAQ,OAAQ,IAI7DG,IAAKb,EAAaQ,YAAY,yBAAyBE,QAAQ,OAAQ,IACvEI,IAAKd,EAAaQ,YAAY,gBAAgBE,QAAQ,OAAQ,KAAOV,EAAaQ,YAAY,cAAcE,QAAQ,OAAQ,IAC5HK,KAAMf,EAAaQ,YAAY,+BAA+BE,QAAQ,OAAQ,MAGlF,MAAOzE,GACP,KAAMA,GAGR,MAAOgE,MJsJNrF,IAAK,eACLV,MAAO,SIpJG8G,GJoJH,GI9IAC,GALJC,EAAK,IAET,KACE,GAAU,UAANF,EAgBF,MAfAE,GAAK5I,SAASiI,cAAc,KACxBU,GAAW,EAGf3I,SAAS6I,KAAKC,aAAaF,EAAI,OAE9B,oBAAqB,eAAgB,gBAAiB,iBAAkB,aAAaG,KAAK,SAACC,GACpFJ,EAAGK,MAAMD,KACbJ,EAAGK,MAAMD,GAAK,2BACdL,EAAWxI,OAAO+I,iBAAiBN,GAAIO,iBAAiBH,MAI5DhJ,SAAS6I,KAAKO,YAAYR,KAEhBD,GAAYA,EAASzG,OAAS,GAAkB,SAAbyG,CACxC,IAAU,eAAND,EAET,MADAE,GAAK5I,SAASiI,cAAc,aACnBW,EAAGS,mBAAuBT,EAAGU,yBAA6BV,EAAGW,qBAAyBX,EAAGY,qBAC7F,IAAU,UAANd,EAET,MADAE,GAAK5I,SAASiI,cAAc,YACnB9H,OAAOsJ,wBAA0Bb,EAAGc,WAAW,UAAYd,EAAGc,WAAW,uBAEpF,MAAOC,GACP,OAAO,EAGT,OAAO,KJuJNrH,IAAK,cACLV,MAAO,WIpJR,GAAM8G,KAEN,KACEnH,EAAUqI,QAAUrI,EAAUqI,SAAWrI,EAAUsI,eAAiBtI,EAAUuI,YAAcvI,EAAUwI,UAEtGrB,EAAEtF,SACA4G,MAAO9I,EAAA3B,QAAQyK,MACfC,iBAAkB/I,EAAA3B,QAAQ0K,iBAC1BC,OAAQhJ,EAAA3B,QAAQ2K,OAChBC,UAAWjJ,EAAA3B,QAAQ4K,UACnBC,KAAMlJ,EAAA3B,QAAQ6K,KACdC,YAAanJ,EAAA3B,QAAQ8K,YACrBC,MAAO9L,KAAK+L,aAAa,UAAYrJ,EAAA3B,QAAQiL,eAC7CC,aAAcvJ,EAAA3B,QAAQkL,aACtBC,cAAexJ,EAAA3B,QAAQmL,cACvBC,MAAOzJ,EAAA3B,QAAQoL,MACfC,QAAQzK,OAAO0K,MAAU1K,OAAO2K,YAAgB3K,OAAO4K,UAAc5K,OAAO6K,MAC5EC,aAAc9K,OAAO+K,kBACrBC,WAAY3M,KAAK+L,aAAa,cAE9Ba,YAAalK,EAAA3B,QAAQ6L,YACrBC,gBAAiB9J,EAAU8J,cAAgB9J,EAAU+J,oBAAsB/J,EAAUgK,iBAAmBhK,EAAUiK,gBAClHC,WAAYvK,EAAA3B,QAAQkM,WACpBC,aAAoC,mBAAdC,YAA8B,GAAIA,WAAU,GAAIC,aAAY,IAAIC,QAAQ,GAAK,EACnGC,aAAc5K,EAAA3B,QAAQuM,aACtBC,WAAY7K,EAAA3B,QAAQwM,WACpBC,OAAQ9K,EAAA3B,QAAQ0M,aAChBC,UAAW/L,OAAOoB,UAAU4K,kBAAoBhM,OAAOoB,UAAU6K,eACjEC,YAAanL,EAAA3B,QAAQ+M,kBACrBC,eAAgBrL,EAAA3B,QAAQgN,eACxBC,WAAYrM,OAAOsM,kBAAoB,EACvCC,YAAaxL,EAAA3B,QAAQmN,YACrBC,YAAa,sBAAwB3M,WAAY,yBAA2BA,WAAY,4BAA8BA,UACtH4M,iBAAkB1L,EAAA3B,QAAQqN,iBAC1BC,aAAsC,eAAxB7M,SAAS8M,YACvBC,QAAS7L,EAAA3B,QAAQwN,QACjBC,cAAe9L,EAAA3B,QAAQyN,cACvBC,MAAO/L,EAAA3B,QAAQ0N,MACfC,OAAQhM,EAAA3B,QAAQ2N,OAChBC,IAAKjM,EAAA3B,QAAQ4N,IACbC,OAAQ,gBAAkBpN,UAASqN,iBAAoBlN,OAAOoB,UAAU+L,gBAAkBnN,OAAOoB,UAAU+L,eAAiB,IAAOpM,EAAA3B,QAAQ6N,MAC3IG,WAAkC,mBAAd5B,WACpB6B,UAAWjM,EAAUqI,QACrB6D,aAAcvM,EAAA3B,QAAQkO,aACtBC,MAAOlP,KAAK+L,aAAa,UAAYrJ,EAAA3B,QAAQmO,MAC7CC,SAAUxN,OAAOyN,SAEnB,MAAOjK,GACP,KAAMA,GAGR,MAAO+E,OJyJDjH,KAGTtD,EAAQoB,QIhYYkC,GJoYf,SAAUrD,EAAQD,EAASQ,IKtYjC,SAAAV,EAAA6F,EAAA+J,GACA,SAAAzP,KAAAD,QAAAC,EAAAD,QAAA0P,IACAlP,EAAA,GAAAmF,EAAA+J,IAECrP,KAAA,oBAOD,QAAAsP,GAAAtM,GAEA,QAAAuM,GAAAC,GACA,GAAAC,GAAAzM,EAAAyM,MAAAD,EACA,OAAAC,MAAA/L,OAAA,GAAA+L,EAAA,OAGA,QAAAC,GAAAF,GACA,GAAAC,GAAAzM,EAAAyM,MAAAD,EACA,OAAAC,MAAA/L,OAAA,GAAA+L,EAAA,OAwTA,QAAAE,GAAAC,GACA,OAAAA,GACA,mBACA,oBACA,0BACA,wBACA,0BACA,2BACA,uBACA,uBACA,yBACA,yBACA,iBA7UA,GAgCAC,GAkTAC,EA2BAC,EAjWAC,EAAAT,EAAA,uBAAAU,cACAC,EAAA,gBAAA5J,KAAAtD,GACA0C,GAAAwK,GAAA,WAAA5J,KAAAtD,GACAmN,EAAA,oBAAA7J,KAAAtD,GACAoN,GAAAD,GAAA,kBAAA7J,KAAAtD,GACA8C,EAAA,OAAAQ,KAAAtD,GACA+F,EAAA,QAAAzC,KAAAtD,GACAwD,EAAA,YAAAF,KAAAtD,GACAyD,EAAA,SAAAH,KAAAtD,GACAiG,EAAA,eAAA3C,KAAAtD,GACA4D,EAAA,iBAAAN,KAAAtD,GAEA0D,GADA,kBAAAJ,KAAAtD,IACA4D,GAAA,WAAAN,KAAAtD,IACAuD,GAAAyJ,IAAAjH,GAAA,aAAAzC,KAAAtD,GACAmD,GAAAT,IAAAc,IAAAC,IAAAwC,GAAA,SAAA3C,KAAAtD,GACAqN,EAAAd,EAAA,wBACAe,EAAAf,EAAA,2BACAtK,EAAA,UAAAqB,KAAAtD,GACAgC,GAAAC,GAAA,YAAAqB,KAAAtD,GACAuN,EAAA,QAAAjK,KAAAtD,EAgYA,OA7XA,SAAAsD,KAAAtD,GAEA6M,GACAvK,KAAA,QACAiD,MAAAiC,EACAhF,QAAA8K,GAAAf,EAAA,4CAEK,aAAAjJ,KAAAtD,GAEL6M,GACAvK,KAAA,QACAiD,MAAAiC,EACAhF,QAAA+J,EAAA,sCAAAe,GAGA,kBAAAhK,KAAAtD,GACA6M,GACAvK,KAAA,+BACAwD,eAAA0B,EACAhF,QAAA8K,GAAAf,EAAA,2CAGA,SAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,cACAkL,MAAAhG,EACAhF,QAAA8K,GAAAf,EAAA,kCAGA,aAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,iBACAmL,cAAAjG,EACAhF,QAAA8K,GAAAf,EAAA,sCAGA,aAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,aACAoL,UAAAlG,EACAhF,QAAA+J,EAAA,wCAGA,SAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,UACAqL,QAAAnG,EACAhF,QAAA+J,EAAA,oCAGA,YAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,WACA2C,SAAAuC,EACAhF,QAAA+J,EAAA,uCAGA,UAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,SACAsL,OAAApG,EACAhF,QAAA+J,EAAA,qCAGA,YAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,WACAuL,SAAArG,EACAhF,QAAA+J,EAAA,uCAGA,YAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,WACAwL,QAAAtG,EACAhF,QAAA+J,EAAA,uCAGA3I,GACAiJ,GACAvK,KAAA,gBACAsB,aAAA4D,GAEA6F,GACAR,EAAAtI,OAAAiD,EACAqF,EAAArK,QAAA6K,IAGAR,EAAAxI,KAAAmD,EACAqF,EAAArK,QAAA+J,EAAA,8BAGA,gBAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,oBACA+B,KAAAmD,EACAhF,QAAA+J,EAAA,gCAEKzJ,EACL+J,GACAvK,KAAA,SACAQ,SAAA0E,EACAuG,WAAAvG,EACA9C,OAAA8C,EACAhF,QAAA+J,EAAA,0CAEK,kBAAAjJ,KAAAtD,GACL6M,GACAvK,KAAA,iBACAiC,OAAAiD,EACAhF,QAAA6K,GAGA,WAAA/J,KAAAtD,GACA6M,GACAvK,KAAA,UACA0L,QAAAxG,EACAhF,QAAA+J,EAAA,4BAAAe,GAGA9J,EACAqJ,GACAvK,KAAA,WACAkB,SAAAgE,EACAhF,QAAA+J,EAAA,uCAGA,eAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,YACAsD,UAAA4B,EACAhF,QAAA+J,EAAA,8BAGA,2BAAAjJ,KAAAtD,IACA6M,GACAvK,KAAA,UACA4C,QAAAsC,EACAhF,QAAA+J,EAAA,mDAEA,wCAA6BjJ,KAAAtD,KAC7B6M,EAAA7J,UAAAwE,IAGAzB,EACA8G,GACAvK,KAAA,cACAyD,KAAAyB,EACAhF,QAAA+J,EAAA,yBAGA,WAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,YACAmD,QAAA+B,EACAhF,QAAA+J,EAAA,8BAGA,YAAAjJ,KAAAtD,GACA6M,GACAvK,KAAA,WACA2L,OAAAzG,EACAhF,QAAA+J,EAAA,6BAGA,sBAAAjJ,KAAAtD,IAAA,eAAAsD,KAAAtD,GACA6M,GACAvK,KAAA,aACAM,WAAA4E,EACAhF,QAAA8K,GAAAf,EAAA,oCAGAtG,GACA4G,GACAvK,KAAA,QACA2D,MAAAuB,EACAhF,QAAA8K,GAAAf,EAAA,sCAEA,cAAAjJ,KAAAtD,KAAA6M,EAAAqB,SAAA1G,IAEA,QAAAlE,KAAAtD,GACA6M,GACAvK,KAAA,OACAK,KAAA6E,EACAhF,QAAA+J,EAAA,2BAGA9I,EACAoJ,GACAvK,KAAA,QACAmB,MAAA+D,EACAhF,QAAA+J,EAAA,yCAAAe,GAGA,YAAAhK,KAAAtD,GACA6M,GACAvK,KAAA,WACA6L,SAAA3G,EACAhF,QAAA+J,EAAA,uCAAAe,GAGA,YAAAhK,KAAAtD,GACA6M,GACAvK,KAAA,WACA8L,SAAA5G,EACAhF,QAAA+J,EAAA,uCAAAe,GAGA,qBAAAhK,KAAAtD,GACA6M,GACAvK,KAAA,SACAoC,OAAA8C,EACAhF,QAAA+J,EAAA,0CAGA7J,EACAmK,GACAvK,KAAA,UACAE,QAAA8K,GAGA,sBAAAhK,KAAAtD,IACA6M,GACAvK,KAAA,SACAoD,OAAA8B,GAEA8F,IACAT,EAAArK,QAAA8K,IAGAN,GACAH,GACAvK,KAAA,UAAA0K,EAAA,iBAAAA,EAAA,eAGAM,IACAT,EAAArK,QAAA8K,IAIAT,EADA,aAAAvJ,KAAAtD,IAEAsC,KAAA,YACA+L,UAAA7G,EACAhF,QAAA+J,EAAA,6BAAAe,IAKAhL,KAAAiK,EAAA,gBACA/J,QAAAkK,EAAA,kBAKAG,EAAAtI,QAAA,kBAAAjB,KAAAtD,IACA,2BAAAsD,KAAAtD,IACA6M,EAAAvK,KAAAuK,EAAAvK,MAAA,QACAuK,EAAA5I,MAAAuD,IAEAqF,EAAAvK,KAAAuK,EAAAvK,MAAA,SACAuK,EAAArI,OAAAgD,IAEAqF,EAAArK,SAAA8K,IACAT,EAAArK,QAAA8K,KAEKT,EAAAtH,OAAA,WAAAjC,KAAAtD,KACL6M,EAAAvK,KAAAuK,EAAAvK,MAAA,QACAuK,EAAA1I,MAAAqD,EACAqF,EAAArK,QAAAqK,EAAArK,SAAA+J,EAAA,0BAIAM,EAAAjJ,cAAAiJ,EAAAtI,SAAA7B,IAAAmK,EAAA9G,KAEK8G,EAAAjJ,cAAAiJ,EAAAtI,SAAAyI,EAGAzJ,EACLsJ,EAAAtJ,IAAAiE,EACK+F,EACLV,EAAAU,KAAA/F,EACK9D,EACLmJ,EAAAnJ,QAAA8D,EACKrE,IACL0J,EAAA1J,MAAAqE,IATAqF,EAAAG,GAAAxF,EACAqF,EAAA3J,IAAAsE,GAHAqF,EAAAnK,QAAA8E,EA+BAsF,EAAA,GACAD,EAAAnJ,QACAoJ,EAAAH,EAAAJ,EAAA,mCACKM,EAAAjJ,aACLkJ,EAAAP,EAAA,0CACKM,EAAAtJ,KACLuJ,EAAAP,EAAA,gCACAO,IAAAlG,QAAA,eACKoG,GACLF,EAAAP,EAAA,sCACAO,IAAAlG,QAAA,eACKlE,EACLoK,EAAAP,EAAA,+BACKM,EAAA5G,MACL6G,EAAAP,EAAA,iCACKM,EAAAjK,WACLkK,EAAAP,EAAA,mCACKM,EAAAlK,KACLmK,EAAAP,EAAA,wBACKM,EAAApJ,QACLqJ,EAAAP,EAAA,8BAEAO,IACAD,EAAApK,UAAAqK,GAIAC,GAAAF,EAAAnJ,SAAAoJ,EAAAwB,MAAA,QAEArM,GACAmL,GACA,QAAAJ,GACAtK,IAAA,GAAAqK,MAAA,IAAA/K,IACA6K,EAAA9G,KAEA8G,EAAA5K,OAAAuF,GAEAxF,GACA,UAAAgL,GACA,QAAAA,GACAtK,GACAyK,GACAN,EAAAjK,YACAiK,EAAA5G,OACA4G,EAAAlK,QAEAkK,EAAA7K,OAAAwF,GAKAqF,EAAAtI,QACAsI,EAAAxI,MAAAwI,EAAArK,SAAA,IACAqK,EAAAY,eAAAZ,EAAArK,SAAA,IACAqK,EAAAmB,SAAAnB,EAAArK,SAAA,GACAqK,EAAAnI,QAAAmI,EAAArK,SAAA,IACAqK,EAAA/G,gBAAA+G,EAAArK,SAAA,GACAqK,EAAA3H,SAAA2H,EAAArK,SAAA,IACAqK,EAAAnH,QAAAmH,EAAArK,SAAA,GACAqK,EAAAtH,OAAAsH,EAAArK,SAAA,IACAqK,EAAA3J,KAAA2J,EAAApK,WAAAoK,EAAApK,UAAA6L,MAAA,YACAzB,EAAAjK,YAAAiK,EAAArK,SAAA,MACAqK,EAAAuB,UAAAvB,EAAArK,SAAA,GAEAqK,EAAA1G,EAAAqB,EAEAqF,EAAAxI,MAAAwI,EAAArK,QAAA,IACAqK,EAAAnI,QAAAmI,EAAArK,QAAA,IACAqK,EAAA3H,SAAA2H,EAAArK,QAAA,IACAqK,EAAAnH,QAAAmH,EAAArK,QAAA,GACAqK,EAAAtH,OAAAsH,EAAArK,QAAA,IACAqK,EAAA3J,KAAA2J,EAAApK,WAAAoK,EAAApK,UAAA6L,MAAA,WACAzB,EAAAuB,UAAAvB,EAAArK,QAAA,GAEAqK,EAAAnP,EAAA8J,EACKqF,EAAA0B,EAAA/G,EAELqF,EA0BA,QAAA2B,GAAAhM,GACA,MAAAA,GAAA8L,MAAA,KAAA5N,OAUA,QAAA+N,GAAAC,EAAAxQ,GACA,GAAAsC,GAAAqM,IACA,IAAA8B,MAAAvQ,UAAAqQ,IACA,MAAAE,OAAAvQ,UAAAqQ,IAAAjR,KAAAkR,EAAAxQ,EAEA,KAAAsC,EAAA,EAAeA,EAAAkO,EAAAhO,OAAgBF,IAC/BqM,EAAA+B,KAAA1Q,EAAAwQ,EAAAlO,IAEA,OAAAqM,GAeA,QAAAgC,GAAAC,GAgBA,IAhBA,GAEAC,GAAAC,KAAAC,IAAAT,EAAAM,EAAA,IAAAN,EAAAM,EAAA,KACAI,EAAAT,EAAAK,EAAA,SAAAtM,GACA,GAAA2M,GAAAJ,EAAAP,EAAAhM,EAMA,OAHAA,IAAAmM,MAAAQ,EAAA,GAAAC,KAAA,MAGAX,EAAAjM,EAAA8L,MAAA,cAAAe,GACA,MAAAV,OAAA,GAAAU,EAAA3O,QAAA0O,KAAA,KAAAC,IACOC,cAIPP,GAAA,IAEA,GAAAG,EAAA,GAAAH,GAAAG,EAAA,GAAAH,GACA,QAEA,IAAAG,EAAA,GAAAH,KAAAG,EAAA,GAAAH,GAOA,QANA,QAAAA,EAEA,UA2BA,QAAAQ,GAAAC,EAAAC,EAAAzP,GAAA,GAgBAwC,GACAlB,EAhBA3B,EAAA+P,CAGA,iBAAAD,KACAzP,EAAAyP,EACAA,EAAA,QAGA,SAAAA,IACAA,GAAA,GAEAzP,IACAL,EAAA2M,EAAAtM,IAGAwC,EAAA,GAAA7C,EAAA6C,OACA,KAAAlB,IAAAkO,GACA,GAAAA,EAAAG,eAAArO,IACA3B,EAAA2B,GAAA,CACA,mBAAAkO,GAAAlO,GACA,KAAA5C,OAAA,6DAAA4C,EAAA,MAAAkO,EAAAI,IAIA,OAAAf,IAAArM,EAAAgN,EAAAlO,KAAA,EAKA,MAAAmO,GAWA,QAAAI,GAAAL,EAAAC,EAAAzP,GACA,OAAAuP,EAAAC,EAAAC,EAAAzP,GA/jBC,GAKDwH,IAAA,EAoaAkI,EAAApD,EAAA,mBAAAvM,qBAAAkB,WAAA,MAoKA,OAlKAyO,GAAApM,KAAA,SAAAwM,GAAA,GACAtP,GACAuP,CADA,KAAAvP,EAAA,EAAmBA,EAAAsP,EAAApP,SAAwBF,EAE3C,GADAuP,EAAAD,EAAAtP,GACA,gBAAAuP,IACAA,IAAAL,GACA,QAIA,WA8IAA,EAAAH,uBACAG,EAAAb,kBACAa,EAAAG,QAOAH,EAAAM,QAAA1D,EAEAoD,KLoZM,SAAU9S,EAAQD,IM1+BxB,SAAAwF,EAAAqF,EAAAyI,GAAiB,YAAa,IAAAC,GAAA1I,EAAAqE,gBAAArL,GAA2B2P,OAAA,SAAAhO,GAAmB,MAAAqF,GAAAf,cAAAtE,IAA0BiO,MAAA,iCAAA9M,KAAAvD,UAAAkB,WAAAoP,IAAA,WAAiF,GAAAlO,GAAAqF,EAAAf,cAAA,SAAAgB,MAAAyI,GAAA,yBAAA1P,IAAsE,iBAAAgH,GAAA,GAAgDpF,GAAA+D,EAA2FzI,CAAxH,aAAA8C,EAAAgH,GAAA,CAA6BpF,EAAAoF,EAAA8I,OAAA,GAAAC,cAAA/I,EAAAgJ,OAAA,GAAArK,GAAAqB,EAAA,IAAA0I,EAAAd,KAAAhN,EAAA,KAAAA,GAAAkM,MAAA,KAAiF9N,EAAAgH,GAAA,IAAU,KAAA9J,IAAAyI,GAAA,GAAAhE,EAAAgE,EAAAzI,MAAAuS,EAAA,CAA+BzP,EAAAgH,GAAArB,EAAAzI,EAAU,QAAO,MAAA8C,GAAAgH,QAAgBpF,GAAI4G,eAAA,WAA0B,GAAA7G,IAAA3B,EAAA4P,KAAA,OAAA5P,EAAA6P,IAAA,cAA0C,SAAAlO,KAAU8G,aAAA,WAA2B,GAAA9G,IAAA3B,EAAA4P,KAAA,OAAA5P,EAAA6P,IAAA,kBAA8C,SAAAlO,KAAU+G,cAAA,WAA4B,GAAA/G,GAAA,OAAA3B,EAAA6P,IAAA,aAAiC,SAAAlO,KAAUsG,mBAAAtG,EAAAsG,iBAAA2C,mBAAA5D,EAAA4D,iBAAAb,aAAApI,EAAAoI,WAAAE,aAAA,qBAAAtI,GAAA2I,kBAAA,0BAAA3I,GAAA0G,YAAA,eAAAqH,IAAA,uBAAA/N,GAAAwG,UAAA,aAAAuH,GAAAhF,YAAA,eAAA1K,GAAA2P,OAAA,SAAA7F,aAAA,WAAsV,GAAAnI,GAAA,GAAU,KAAI,MAAAmI,cAAAmG,QAAAtO,KAAAmI,aAAAoG,WAAAvO,IAAA,EAA+D,MAAAqF,GAAS,aAAUyC,WAAA9H,EAAAwO,SAAA,aAAAxO,GAAAwO,QAAAnF,cAAA,iBAAAzL,WAAAkM,aAAA,SAAA9J,GAAoH,IAAIA,EAAAsF,MAAAmJ,MAAA,KAAoB,IAAApJ,GAAA,KAAArF,EAAAsF,MAAAmJ,KAAyB,SAAApJ,EAAU,MAAAyI,GAAS,WAAUzP,EAAA2P,OAAA,UAAA5E,QAAA,SAAApJ,GAAwC,IAAIA,EAAAsF,MAAAmJ,MAAA,MAAqB,IAAApJ,GAAA,KAAArF,EAAAsF,MAAAmJ,KAAyB,SAAApJ,EAAU,MAAAyI,GAAS,WAAUzP,EAAA2P,OAAA,UAAAzH,OAAA,SAAAvG,GAAuC,SAAAA,EAAA+F,aAAA/F,EAAA+F,WAAA,QAA4C1H,EAAA2P,OAAA,WAAAxE,MAAAnE,EAAAqJ,mBAAArJ,EAAAqJ,gBAAA,oCAAAC,cAAA5E,MAAA,SAAA1E,GAAsI,IAAI,SAAArF,EAAA8F,wBAAAT,EAAAU,WAAA,WAAAV,EAAAU,WAAA,uBAA+F,MAAA+H,GAAS,WAAUzP,EAAA2P,OAAA,WAAAvH,KAAA,kBAAAzG,IAAA,uBAAA4O,gBAAAnF,SAAA,gBAAAzJ,MAAApC,WAAAoC,EAAApC,UAAA4K,kBAAAxI,EAAA6O,WAAA7O,EAAA8O,eAAAzJ,YAAAyJ,gBAAAzI,MAAA,SAAAhI,GAAA2P,OAAA,UAAAhH,MAAA,SAAA3I,GAAA2P,OAAA,UAAAvG,YAAA,eAAA7J,WAAA2L,OAAA,UAAAlL,GAAA2P,OAAA,OAAA1E,MAAA,SAAAjL,GAAA2P,OAAA,OAAApF,eAAA,sBAAA5I,GAAA+O,QAAA,cAA8c1J,GAAZrF,EAAA,KAAY,KAAAqF,IAAAxK,MAAA,YAAAwK,GAAA,gBAAAA,GAAAxK,KAAAwK,KAAArF,GAAA,IAAAqF,EAAwE0I,GAAAiB,WAAAhP,EAAA8K,eAA+B9K,GAAAiP,QAAAhP,GAAYzD,OAAAH,UAAA5B,EAAAD,QAAAgC,OAAAyS,SNi/B7yE,SAAUxU,EAAQD,EAASQ,GAEhC,GAAIkU,IOp/BL,SAAAzU,EAAA2B,IAMC,WACD,YAyDA,SAAA+S,GAAAC,GAEA,MADAA,IAAA3B,GACA2B,EAAAjB,OAAA,GAAAC,cAAAgB,EAAAC,MAAA,GAWA,QAAAC,GAAArQ,EAAAsQ,EAAAC,GAIA,GAAAC,IACAC,OAAA,KACAC,IAAA,uBACAC,IAAA,MACAC,IAAA,IACAC,IAAA,qBACAC,MAAA,sBACAC,IAAA,0BACAC,IAAA,KACAC,KAAA,WACAC,MAAA,OACAC,MAAA,KACAC,OAAA,KA8BA,OA3BAd,IAAAC,GAAA,QAAArO,KAAAlC,KAAA,mBAAAkC,KAAAlC,KACAwQ,IAAA,UAAAa,KAAArR,OACAA,EAAA,WAAAwQ,GAGAxQ,GAAAwO,GAEA8B,GAAAC,IACAvQ,IAAAwF,QAAA8L,OAAAhB,EAAA,KAAAC,IAGAvQ,EAAAuR,EACAvR,EAAAwF,QAAA,eACAA,QAAA,gBACAA,QAAA,0BACAA,QAAA,qBACAA,QAAA,0BACAA,QAAA,uBACAA,QAAA,gBACAA,QAAA,UACAA,QAAA,iCACAA,QAAA,0BACAA,QAAA,+BACAA,QAAA,mCACA0H,MAAA,YAaA,QAAA/G,GAAAqL,EAAAC,GACA,GAAAC,IAAA,EACApS,EAAAkS,IAAAlS,OAAA,CAEA,oBAAAA,OAAA,GAAAA,GAAAqS,EACA,OAAAD,EAAApS,GACAmS,EAAAD,EAAAE,KAAAF,OAGAI,GAAAJ,EAAAC,GAWA,QAAAF,GAAApB,GAEA,MADAA,GAAA0B,EAAA1B,GACA,uBAAAjO,KAAAiO,GACAA,EACAD,EAAAC,GAUA,QAAAyB,GAAAJ,EAAAC,GACA,OAAA/R,KAAA8R,GACAjD,EAAAnS,KAAAoV,EAAA9R,IACA+R,EAAAD,EAAA9R,KAAA8R,GAYA,QAAAM,GAAA9S,GACA,aAAAA,EACAkR,EAAAlR,GACA+S,EAAA3V,KAAA4C,GAAAoR,MAAA,MAaA,QAAA4B,GAAAR,EAAAS,GACA,GAAAC,GAAA,MAAAV,WAAAS,GAAA,QACA,iDAAA/P,KAAAgQ,IACA,UAAAA,IAAAV,EAAAS,IAUA,QAAAE,GAAAhC,GACA,OAAAA,EAAA3B,IAAAhJ,QAAA,sBAWA,QAAA4M,GAAAC,EAAAZ,GACA,GAAAa,GAAA,IAIA,OAHAnM,GAAAkM,EAAA,SAAArT,EAAA0S,GACAY,EAAAb,EAAAa,EAAAtT,EAAA0S,EAAAW,KAEAC,EAUA,QAAAT,GAAA1B,GACA,OAAAA,EAAA3B,IAAAhJ,QAAA,eAaA,QAAA+M,GAAA3T,GAsPA,QAAA4T,GAAAC,GACA,MAAAL,GAAAK,EAAA,SAAAhH,EAAAiH,GACA,MAAAjH,IAAA6F,OAAA,OACAoB,EAAApC,SAAA6B,EAAAO,IACA,WAAArB,KAAAzS,KAAA8T,EAAAnC,OAAAmC,KAWA,QAAAC,GAAAF,GACA,MAAAL,GAAAK,EAAA,SAAAhH,EAAAzM,EAAAU,GAEA,MAAA+L,KACAzM,EAAA4T,IACA5T,EAAA,0BAAAqS,KAAAuB,KACAtB,OAAA,MAAAa,EAAAzS,GAAA,uBAAA2R,KAAAzS,KACAc,IAWA,QAAAmT,GAAAJ,GACA,MAAAL,GAAAK,EAAA,SAAAhH,EAAAiH,GACA,MAAAjH,IAAA6F,OAAA,OACAoB,EAAApC,SAAA6B,EAAAO,IACA,WAAArB,KAAAzS,KAAA8T,EAAAnC,OAAAmC,KAWA,QAAAzS,GAAAwS,GACA,MAAAL,GAAAK,EAAA,SAAAhH,EAAAiH,GACA,GAAApC,GAAAoC,EAAApC,SAAA6B,EAAAO,EAMA,QALAjH,MACA6F,OAAA,MAAAhB,EAAA,6BAAAe,KAAAzS,MAEA6M,EAAA4E,EAAA5E,EAAA6E,EAAAoC,EAAAnC,OAAAmC,IAEAjH,IAWA,QAAAqH,GAAAL,GACA,MAAAL,GAAAK,EAAA,SAAAhH,EAAAiH,GACA,GAAApC,GAAAoC,EAAApC,SAAA6B,EAAAO,EAiBA,QAhBAjH,MACA6F,OAAA,MAAAhB,EAAA,sBAAAe,KAAAzS,IACA0S,OAAA,MAAAhB,EAAA,qBAAAe,KAAAzS,IACA0S,OAAA,MAAAhB,EAAA,6CAA8E,KAAAe,KAAAzS,OAG9E6M,IAAAiH,EAAAnC,QAAAe,OAAAhB,EAAA,KAAApO,KAAAwQ,EAAAnC,OAAAmC,EAAAnC,MAAA9E,GAAA+C,IAAAtB,MAAA,oBAAAhL,KAAAuJ,EAAA,MACAA,EAAA,QAAAA,EAAA,IAGAiH,IAAAnC,OAAAmC,EACAjH,EAAA8F,EAAA9F,EAAA,GACAjG,QAAA8L,OAAAhB,EAAA,KAAAoC,GACAlN,QAAA8L,OAAA,SAA8BoB,EAAA,mBAC9BlN,QAAA8L,OAAA,IAAAoB,EAAA,+BAEAjH,IAWA,QAAAsH,GAAAC,GACA,MAAAZ,GAAAY,EAAA,SAAAvH,EAAA6E,GACA,MAAA7E,KAAA6F,OAAAhB,EACA,2DAA6D,KAAAe,KAAAzS,IAAA,cAW7D,QAAAqU,KACA,MAAArX,MAAA6E,aAAA,GAtWA,GAeAyS,GAGArT,EAKAsT,EAGAC,EAKAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EAGAC,EAGAC,EAGAC,EAGAC,EAOA3P,EAGA4P,EAOAvD,EAGAwD,EAGAvT,EAGAwT,EAGAC,EAGA9S,EAGA+S,EAGArR,EAaA5B,EAkDA0R,EAkCAlS,EAoBAV,EAokBAF,EA9wBAsU,EAAA/Y,EAGAgZ,EAAAzV,GAAA,gBAAAA,IAAA,UAAAkT,EAAAlT,EA6dA,IA1dAyV,IACAD,EAAAxV,EACAA,EAAA,MAIAsU,EAAAkB,EAAAzV,cAGAkB,EAAAqT,EAAArT,WAAA,GAEAjB,MAAAiB,GAGAsT,EAAAkB,GAAAC,GAAAC,EAGAnB,EAAAiB,IACAnB,EAAAE,WACA,aAAAlR,KAAAtD,KAAA,eAAAsD,KAAA6P,MAGAsB,EAAA,SACAC,EAAAe,EAAAhB,EAAA,4BACAE,EAAAc,EAAAhB,EAAA,cACAG,EAAAa,GAAAD,EAAAV,KAAA,cAAA5B,EAAAsC,EAAAV,MACAD,EAAAY,EAAAhB,EAAA,gBAGAK,EAAA,SAAAxR,KAAAsR,IAAAY,EAAAV,KAGAC,EAAAD,GAAA5B,EAAAsC,EAAAI,cAAAjB,EAGAK,EAAAF,EAAA,QAGAG,EAAAH,EAAA,QAGAI,EAAAM,EAAAhX,aAOA+G,EAAAiQ,EAAAK,WAAAL,EAAAjQ,MAGA4P,EAAAW,EAAAxS,KAAA6R,EAAAM,GAAAlQ,IAAA,aAAA2N,EAAA3N,IACA4P,EACA5P,EAAA,KAQA6P,EAAApV,EAGA6B,KAGAwT,EAAA,KAGAC,EAAAtV,GAAAiB,EAGAuB,EAAA8S,GAAA/P,GAAA,kBAAAA,GAAA/C,SAAA+C,EAAA/C,UAMA0B,EAAA0P,IACOjC,MAAA,WAAAD,QAAA,QACP,WACOC,MAAA,SAAAD,QAAA,eACP,OACA,SACA,WACA,SACA,QACA,UAIApP,EAAA2R,GACA,YACA,QACA,gBACA,SACA,SACA,WACA,WACA,SACA,QACA,SACA,eACA,OACA,YACA,WACA,YACA,YACA,WACOtC,MAAA,iBAAAD,QAAA,QACP,SACA,eACA,WACA,YACA,QACA,SACA,YACOC,MAAA,mBAAAD,QAAA,kBACP,aACOC,MAAA,OAAAD,QAAA,+BACP,WACA,eACOC,MAAA,cAAAD,QAAA,QACP,UACA,WACA,WACA,cACA,cACOC,MAAA,aAAAD,QAAA,SACP,SACOC,MAAA,QAAAD,QAAA,OACP,UACOC,MAAA,gBAAAD,QAAA,mBACAC,MAAA,UAAAD,QAAA,0BACAC,MAAA,kBAAAD,QAAA,UACAC,MAAA,KAAAD,QAAA,aACAC,MAAA,KAAAD,QAAA,QACP,WAIAsC,EAAAE,IACOvC,MAAA,aAAAD,QAAA,QACP,cACOC,MAAA,WAAAD,QAAA,aACAC,MAAA,YAAAD,QAAA,aACAC,MAAA,YAAAD,QAAA,aACAC,MAAA,YAAAD,QAAA,aACAC,MAAA,YAAAD,QAAA,YACAC,MAAA,YAAAD,QAAA,YACAC,MAAA,iBAAAD,QAAA,YACAC,MAAA,YAAAD,QAAA,YACAC,MAAA,iBAAAD,QAAA,WACP,YACA,QACA,OACA,OACA,SACA,UACOC,MAAA,cAAAD,QAAA,+BACP,QACA,OACA,WACA,mBACA,cACA,WACA,eACOC,MAAA,QAAAD,QAAA,QACP,MACA,YACOC,MAAA,WAAAD,QAAA,QACP,SAIA5P,EAAAiS,GACAgC,OAAgBC,KAAA,EAAAC,OAAA,EAAAC,KAAA,GAChBC,UACAC,QAAiBC,OAAA,EAAAC,cAAA,GACjBC,MAAeC,YAAA,GACfC,kBAAyBC,KAAA,GACzBC,YAAqBC,SAAA,GACrBC,QAAiBC,YAAA,EAAAC,MAAA,GACjBC,IAAaC,SAAA,GACbC,OACAC,MACAC,WAAoBC,KAAA,EAAAC,WAAA,GACpBC,UAAmBC,KAAA,GACnBC,UAAmBC,QAAA,EAAAC,IAAA,GACnBC,OAAgBC,MAAA,GAChBC,SAAkBC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA,GAClBC,MAAeC,YAAA,EAAAC,mBAAA,KAIfjX,EAAAC,GACA,gBACA,UACA,UACOsQ,MAAA,YAAAD,QAAA,QACP,SACA,SACA,UACA,SACA,QACA,UACA,aACA,UACA,UACA,OACA,SACA,UACA,SACA,aACA,QACA,SACA,QACA,YACA,QACA,QACA,WACA,YACA,MACA,cACA,aAkIAxN,WAGApC,IAAAkS,IACAA,EAAAE,GAAApS,MAGA8P,EAAA,gBAAAa,KAAAuB,MACAA,EAAApC,EAAA,IAGA,iBAAAtO,KAAAtD,KACAgU,OAAA,qBAGA,cAAA1R,GAAA,YAAAgB,KAAAtD,IACA6B,EAAA+M,KAAA,sCAGA,MAAAtM,GAAA,qBAAAgB,KAAAtD,IACA4R,EAAA+B,EAAA3T,EAAA4G,QAAA,sBACA9E,EAAA8P,EAAA9P,aACAkS,EAAApC,EAAAoC,SAGA,MAAA1Q,KAAA0Q,IACA1R,MAAA,UACAlB,EAAA,QAAAwQ,EAAA,gBAAAa,KAAAzS,IACA,IAAA4R,EAAA,GAAAhL,QAAA,UACA,KAGA,aAAAtE,GAAA,SAAAgB,KAAAlC,GAIAU,GAAA,UAAAA,IACA,SAAAwB,KAAAhB,KAAA,qBAAAgB,KAAAtD,IAAA,WAAAsD,KAAA0Q,KACA,cAAA1Q,KAAAlC,IAAA,UAAAkC,KAAAhB,IAAA,eAAAgB,KAAAtD,IACAsC,EAAA,kBACAlB,EAAA,cAAAkC,KAAAlC,KAAA,WAGA,QAAAkB,GACA,UAAAgB,KAAAtD,KACAoB,EAAA,UACAS,EAAAyW,QAAA,iBAEA,wBAAAhV,KAAAtD,IACA6B,EAAAyW,QAAA,gBAIA,YAAAhW,IAAAsP,EAAA,wBAAAa,KAAAzS,IACA6B,EAAA+M,KAAA,0BAAAgD,EAAA,IAGA,WAAAtP,IAAAsP,EAAA,0BAAAa,KAAAzS,KACAoB,MAAA,cACA4S,MAAApC,EAAA,MAGAtP,IAAAsP,GAAA,iBAAAtO,KAAAtD,IAAA,yBAAAyS,KAAAnQ,KAEAA,IAAA0R,GAAA,kBAAA1Q,KAAAtD,EAAAwR,MAAAxR,EAAAuY,QAAA3G,EAAA,WAEAtP,EAAA,OAGAsP,EAAAoC,GAAAlS,GAAAV,KACA4S,GAAAlS,GAAA,6CAAAwB,KAAAlC,MACAkB,EAAA,mBAAAmQ,KAAA,cAAAnP,KAAAlC,KAAAwQ,GAAA,aAIA,YAAAtP,IAAAsP,GAAA,uBAAAa,KAAAzS,IAAA,QACA6B,EAAA+M,KAAA,YAAAgD,GA3CAxQ,EAAA,UA8CAoB,IACAA,EAAA2R,GACA,8GACA,UACAZ,EAAAjR,GACA,qCAIAsP,EACA,QAAA1N,GAAAsU,WAAAhW,GAAA,aACA,YAAAc,KAAAhB,KAAA,UAAAgB,KAAAtD,GAAA,mBACA,8BAAAsD,KAAAtD,KAAA,yBAAAsD,KAAAY,IAAA,WACAA,GAAA,YAAAZ,KAAAtD,KAAA,UAAAoB,EAAA,qBACA,UAAA8C,GAAA,8BAAAZ,KAAAhB,IAAA,cAEA4B,GAAA0N,IAGA,MAAAtP,IAAAsP,GAAA,4BAAmCa,KAAAzS,IAAA,QACnCsC,GAAA,UACAlB,EAAA,wBAAAkC,KAAAsO,OAAA,MACA/P,EAAAyW,QAAA,iBAGA,iBAAAhV,KAAAtD,IACAsC,EAAA,YACAlB,EAAA,oBACAS,EAAAyW,QAAA,gBACA9V,OAAA,gBAAAiQ,KAAAzS,IAAA,QAGA,MAAAsC,GAAA,WAAA4B,IAAA0N,EAAA,gBAAAa,KAAAzS,MACAsC,GACAT,EAAA+M,KAAA,kBAAAtM,GAAAE,EAAA,IAAAA,EAAA,KAEAF,EAAA,KACAE,EAAAoP,EAAA,IAGA0D,EAAA,CAGA,GAAAlC,EAAAoC,EAAA,UAMA,GALAV,IACAlD,EAAAkD,EAAA2D,KAAAC,OACAtD,EAAAxD,EAAA+G,YAAA,WACAvX,KAAAwQ,EAAA+G,YAAA,eAAA/G,EAAA+G,YAAA,eAEApE,GAAAnB,EAAAoC,EAAA,YAAA5D,GAAA4D,EAAAoD,SAAA,IACAxX,MAAAwQ,EAAA,GAAAxQ,IAAA,KACA,KACAwQ,EAAA,GAAA4D,EAAA3Y,QAAA,gBAAA2F,QACAA,EAAAoP,EAAA,GAAAxC,KAAA,KACA9M,EAAA,UACW,MAAAH,GACXyP,EAAA,GAAArT,OAAAqa,QAAApD,EAAAoD,SACAtW,EAAA,gBAKA,gBAAAkT,GAAAqD,UAAArD,EAAAqD,QAAAvX,UACAsQ,EAAA4D,EAAAqD,SAEA,gBAAAjH,GAAA9C,SACA,gBAAA8C,GAAA9C,SAAA9J,UACAnD,EAAA+M,KAAA,QAAAgD,EAAA9C,SAAAgK,MACAxW,EAAA,WACAE,EAAAoP,EAAA9C,SAAA9J,UACa,gBAAA4M,GAAA9C,SAAAiK,KACblX,EAAA+M,KAAA,YAAApM,EAAA,QAAAoP,EAAA9C,SAAAgK,MACAxW,EAAA,QACAE,EAAAoP,EAAA9C,SAAAiK,KAGAzW,EAAA,UACA8S,EAAAxD,EAAAwD,KACAhU,EAAAwQ,EAAA1Q,SACAsB,EAAA,SAAAiQ,KAAAb,EAAApP,SACAA,MAAA,cAGAuS,IACAzS,EAAA,aAIA4Q,GAAAtB,EAAA4D,EAAAwD,UAAAtE,GACApS,EAAA,YACAlB,EAAAwQ,EAAAqH,MAAAL,OAAAM,aAAA9X,IAGA8R,EAAAtB,EAAA4D,EAAA/P,UAAAoP,GACAvS,EAAA,YACAE,GAAAoP,IAAApP,SAAA,OAAAoP,EAAAuH,MAAA,IAAAvH,EAAAwH,MAAA,IAAAxH,EAAAyH,OAGA,gBAAAnE,GAAAoE,eAAA1H,EAAA,oBAAAa,KAAAzS,KAGAwC,KAAA0S,EAAAoE,eACA1H,KAAA,OAAApP,EAAA,KACAX,EAAA+M,KAAA,MAAApM,EAAA,YACA0B,MAAA,OACA1B,EAAA,GAAAoP,GAEApP,EAAA,MAAAF,EAAAE,EAAA,GAAA+W,QAAA,GAAA3J,GAAApN,EAAA,IAGA,gBAAA0S,GAAAoE,cAAA,wBAAAhW,KAAAhB,KACAT,EAAA+M,KAAA,cAAAtM,EAAA,IAAAE,GACAF,EAAA,KACAE,EAAA,OACA0B,GAAA,WACA9C,EAAA,UAEAA,MAAAuR,EAAAvR,GAaA,GAVAoB,IAAAoP,EACA,0CAAAa,KAAAjQ,IACA,2BAAAiQ,KAAAzS,EAAA,KAAiDsV,GAAAhB,EAAAkF,mBACjD,iBAAAlW,KAAAtD,IAAA,OAEAqV,EAAA,KAAA/R,KAAAsO,GAAA,eACApP,IAAAoE,QAAA8L,OAAAd,EAAA,cACA,QAAAyD,EAAAJ,EAAAD,IAAA,SAAAvC,KAAAb,IAAA,KAGA,UAAAtP,GAAA,WAAAA,GAAA,6BAAAgB,KAAAlC,GACAkB,EAAA,qBAGA,eAAAA,GAAAE,EACAA,IAAAoE,QAAA,qBAGA,gBAAAtD,KAAA0Q,GACA,YAAAA,IACA5S,EAAA,MAEA,YAAA4S,GAAA,eAAA1Q,KAAAtD,IACA6B,EAAAyW,QAAA,mBAIA,6BAAAhV,KAAAhB,SAAA0R,GAAA,eAAA1Q,KAAAhB,KACA,cAAAlB,IAAA,QAAAkC,KAAAtD,GAIA,SAAAsC,GAAAgT,EACA,IACA,OAAAE,EAAAiE,UACA5X,EAAAyW,QAAA,oBAEO,MAAAnW,GACPN,EAAAyW,QAAA,iBAKA,iBAAAhV,KAAA0Q,IAAA,WAAA1Q,KAAAtD,MAAA4R,GACAc,OAAAsB,EAAApN,QAAA,8BAAA6L,KAAAzS,IAAA,OACAwC,IAEAoP,KAAA,OAAAtO,KAAAtD,IACAoB,GAAAwQ,EAAA,IAAAoC,EAAA,KAAAlS,EAAA,qCAAA8P,EAAA,GACApP,EAAA,MAIAxF,MAAAgW,GAAA,OAAAgB,IACAsB,GAAA/P,GACA,QAAAjC,KAAAhB,IAAA,wBAAAgB,KAAAtD,IACA,WAAAsC,GAAA,uBAAqDgB,KAAAlC,IACrD,MAAAkB,IACAlB,IAAA,OAAAkC,KAAAlC,IAAAoB,EAAA,KACA,iBAAAc,KAAAlC,IAAAoB,EAAA,GACA,GAAAA,IAAA,cAAAc,KAAAtD,OAEA8V,EAAAxS,KAAAsO,EAAA+B,EAAAnW,KAAAwV,EAAAhT,EAAA4G,QAAAkP,EAAA,WAAkFlE,EAAAtP,OAElFsP,EAAA,UAAAA,EAAAtP,OAAAsP,IAAApP,SAAA,IAAAoP,EAAA,IACAkE,EAAAxS,KAAAhB,IACA,SAAAgB,KAAAsO,IAAA,UAAAxQ,IACAA,EAAA,MAEAwQ,EAAA,WAAAA,IAIAA,EAAA,OAAAA,EAEAtP,EADA6S,EACAxC,EAAAwC,EAAAvO,QAAA,4BAEA,QAEA,SAAAtD,KAAAsO,KACAxQ,EAAA,MAEAkU,IACA9S,EAAA,OAGA0B,GAAA,UACArC,EAAA+M,KAAAgD,QA1DAtP,IAAA,SAqVA,QAxRAsP,GAAA,8BAAAa,KAAAzS,IAAA,SAGA4R,GAAA4G,WAAA5G,EAAAhL,QAAA,mBAAAgL,GAEA,UAAAtP,GAAA,KAAAsP,EAAA,GAAAJ,OAAA,IACAlP,EAAA,iBACA+S,EAAA,QACA7S,EAAAoP,EAAA,GAAAJ,MAAA,OAGAhP,GAAAoP,EAAA,IACApP,IAAAoP,EAAA,6BAAAa,KAAAzS,IAAA,SACAwC,EAAA,MAGAoP,EAAA,0BAAAa,KAAAzS,IAAA,MAEA,QAAA4R,EAAA,YAAAA,EAAA,IAAA4G,WAAA5G,EAAA,mBAAA1N,IACAA,GAAA,UAIAoR,IAAAd,GAAA5C,EAAA,KAIA1N,MAAA,kBACA0N,IAAA,KAAAA,IAAA,GAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,aAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,aAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,mBAAA1N,EAAA,aAJAA,MAAA,kBACA0N,IAAA,GAAAA,IAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,WAMA1N,MAAA,SAAA0N,GAAA,gBAAAA,GAAA,YAAAtO,KAAAsO,GAAA,SAEA,UAAAtP,KAAAE,GAAAkX,SAAAlX,GAAA,MACAA,EAAAoP,IAIA,SAAAtP,IAAAsP,EAAA,eAAAa,KAAArR,KACAkB,GAAA,IACAT,EAAAyW,QAAA,gBACA,QAAA1G,GACAtP,GAAA,OACAE,EAAA,MAEAF,GAAA,SAEAlB,IAAAwF,QAAA8L,OAAA,KAAAd,EAAA,UAGA,UAAAtP,GAAA,aAAAmQ,KAAAvO,KAAA,MACArC,EAAAyW,QAAA,gBACAhW,EAAA,gBACAE,EAAA,KAEA,WAAAc,KAAAlC,IACAU,EAAA,QACAV,EAAA,YAEAA,EAAA,MAIAoB,GAAA,GAAAA,EAAA+V,QAAA3G,EAAA,UAAAa,KAAArR,KACApB,EAAAuY,QAAA,IAAA3G,EAAA,UACAxQ,EAAA6R,EAAA7R,EAAAwF,QAAAgL,EAAA,MAGA1N,IAAA,qBAAAZ,KAAAhB,KACA,4BAAAgB,KAAAhB,IACA,UAAAA,GAAA,OAAAgB,KAAAlC,IAAA,aAAAkC,KAAAY,EAAA,KACA,yFAAAZ,KAAAhB,IAAA4B,EAAA,MAEA0N,EAAA1N,IAAAxD,OAAA,KAAAmB,EAAA+M,KAAAgD,GAGA/P,EAAAnB,SACAmB,GAAA,IAAAA,EAAAuN,KAAA,MAA8C,MAG9CtN,GAAAkS,KAAAuE,QAAAzW,GAAA,GACAD,EAAA+M,KAAA,MAAA9M,GAGAkS,GACAnS,EAAA+M,MAAA,OAAAtL,KAAAzB,IAAAnB,OAAA,cAAAsT,GAGA5S,IACAwQ,EAAA,cAAAa,KAAArR,GACAmU,EAAA3D,GAAA,KAAAxQ,EAAAkP,OAAAlP,EAAAV,OAAAkR,EAAA,GAAAlR,OAAA,GACAU,GACAiB,aAAA,GACAE,OAAAqP,IAAA2D,EAAAnU,EAAAwF,QAAAgL,EAAA,OAAAxQ,EACAoB,QAAAoP,IAAA,QACAuB,SAAA,WACA,GAAA3Q,GAAAxF,KAAAwF,OACA,OAAAxF,MAAAuF,QAAAC,IAAA+S,EAAA,IAAA/S,EAAA,SAAAxF,KAAAqF,aAAA,kBAKAuP,EAAA,mCAAAa,KAAA2C,MAAA,YAAA9R,KAAA8R,IACAhU,IACAA,EAAAiB,aAAA,GACAjB,EAAAmB,OAAAnB,EAAAmB,OAAAqE,QAAA8L,OAAA,KAAAd,GAAA,KAGAtP,IAAA,aAAAgB,KAAAtD,IACAsV,GAAA,eAAAhS,KAAAgR,EAAAqF,UAAArF,EAAApT,YAAA,kBAAyFoC,KAAAtD,KAEzF6B,EAAAyW,QAAA,WAKAlX,GAAA,QAAAkC,KAAAlC,EAAAmB,SACA,UAAAD,GAAAkW,WAAAhW,IAAA,KAEApB,EAAAiB,aAAA,IAGArC,MAAA,MAUAkB,KAQAA,EAAAW,YAAA7B,EAWAkB,EAAAgD,YAAA,GAaAhD,EAAAY,eAgBAZ,EAAAoB,OAQApB,EAAAmU,aAaAnU,EAAA8S,UAQA9S,EAAAlB,KAQAkB,EAAAsB,QAAAF,GAAAE,EAQAtB,EAAAE,OAQAiB,aAAA,KAaAE,OAAA,KAQAC,QAAA,KAQA2Q,SAAA,WAA8B,eAG9BjS,EAAAyS,QACAzS,EAAAiS,SAAAkB,EAEAnT,EAAAsB,SACAX,EAAAyW,QAAA9V,GAEAtB,EAAAoB,MACAT,EAAAyW,QAAAhW,GAEAlB,GAAAkB,IAAAlB,MAAAwO,IAAAtB,MAAA,SAAAlN,GAAAkB,EAAAgM,MAAA,UAAA0F,IACAnS,EAAA+M,KAAAoF,EAAA,IAAA5S,EAAA,UAAAA,GAEAS,EAAAnB,SACAQ,EAAAW,cAAAuN,KAAA,MAEAlO,EA3pCC,GAgCD6R,GAGA+C,EAGAJ,EAGAkE,EAGAjK,EAGAwD,EAknCAjS,EA7pCA2Y,GACAC,UAAA,EACAlH,QAAA,GAIAnW,EAAAod,QAAAlb,kBAAA3B,KAGA2Y,EAAAlZ,EAGAsd,EAAAF,QAAAld,OAGAqd,EAAAH,QAAAjd,WAAAqd,UAAArd,EAGAsd,EAAAH,GAAAC,GAAA,gBAAAzb,OACA2b,KAAA3b,SAAA2b,KAAAvb,SAAAub,KAAAC,OAAAD,IACAzd,EAAAyd,GAQAnH,EAAA/D,KAAAoL,IAAA,QAGAtE,EAAA,UAGAJ,EAAA1Y,KAGA4c,EAAA1Z,OAAA9B,UAGAuR,EAAAiK,EAAAjK,eAGAwD,EAAAyG,EAAAzG,SAknCAjS,EAAAyS,IAOAlX,EAAAyE,WAGAmQ,EAAA,WACA,MAAAnQ,IACK1D,KAAAb,EAAAQ,EAAAR,EAAAC,KAAAgC,SAAAyS,IAAAzU,EAAAD,QAAA0U,MAaJ7T,KAAAR,QPs/B6BQ,KAAKb,EAASQ,EAAoB,GAAGP,GAAU,WAAa,MAAOI,WAI3F,SAAUJ,EAAQD,GQ1rExBC,EAAAD,QAAA,WAA6B,KAAA+B,OAAA,oCRisEvB,SAAU9B,EAAQD,GSjsExBC,EAAAD,QAAAM","file":"./detector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"flavor-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"flavor-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"detector-js\"] = factory(require(\"flavor-js\"));\n\telse\n\t\troot[\"detector-js\"] = factory(root[\"Æ’\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"flavor-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"flavor-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"detector-js\"] = factory(require(\"flavor-js\"));\n\telse\n\t\troot[\"detector-js\"] = factory(root[\"Æ’\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _Detector = __webpack_require__(2);\n\t\n\tvar _Detector2 = _interopRequireDefault(_Detector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get DetectorJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('DetectorJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  var detector = void 0;\n\t\n\t  if (!window.detector) {\n\t    detector = new _Detector2.default();\n\t    window.detector = detector;\n\t  } else {\n\t    detector = window.detector;\n\t  }\n\t\n\t  return detector;\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _platform = __webpack_require__(5);\n\t\n\tvar _platform2 = _interopRequireDefault(_platform);\n\t\n\tvar _featureJs = __webpack_require__(4);\n\t\n\tvar _featureJs2 = _interopRequireDefault(_featureJs);\n\t\n\tvar _bowser = __webpack_require__(3);\n\t\n\tvar _bowser2 = _interopRequireDefault(_bowser);\n\t\n\tvar _flavorJs = __webpack_require__(7);\n\t\n\tvar _flavorJs2 = _interopRequireDefault(_flavorJs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar navigator = window.navigator;\n\tvar ua = navigator.userAgent;\n\t\n\tvar Detector = function () {\n\t  function Detector() {\n\t    _classCallCheck(this, Detector);\n\t\n\t    this.platform = this.getPlatform();\n\t    this.os = this.getOS();\n\t    this.browser = this.getBrowser();\n\t    this.features = this.getFeatures();\n\t    this.audio = this.getAudio();\n\t  }\n\t\n\t  _createClass(Detector, [{\n\t    key: 'getPlatform',\n\t    value: function getPlatform() {\n\t      var p = {};\n\t\n\t      try {\n\t        // see https://github.com/bestiejs/platform.js/blob/master/doc/README.md#readme\n\t        p.inherit({\n\t          description: _platform2.default.description,\n\t          manufacturer: _platform2.default.manufacturer, // eg. 'Apple', 'Archos', 'Amazon', 'Asus', 'Barnes & Noble', 'BlackBerry', 'Google', 'HP', 'HTC', 'LG', 'Microsoft', 'Motorola', 'Nintendo', 'Nokia', 'Samsung' and 'Sony'\n\t          desktop: !_bowser2.default.mobile && !_bowser2.default.tablet,\n\t          phone: _bowser2.default.mobile,\n\t          tablet: _bowser2.default.tablet\n\t          // desktop: false,\n\t          // pc: false,\n\t          // mac: false,\n\t          // iPhone: false,\n\t          // iPad: false,\n\t        });\n\t      } catch (e) {\n\t        throw e;\n\t      }\n\t\n\t      return p;\n\t    }\n\t  }, {\n\t    key: 'getOS',\n\t    value: function getOS() {\n\t      var o = {};\n\t\n\t      try {\n\t        o.inherit({\n\t          architecture: _platform2.default.os.architecture === 32 ? 'x86' : 'x64',\n\t          name: _platform2.default.os.family,\n\t          version: _platform2.default.os.version || _bowser2.default.osversion,\n\t          android: _bowser2.default.android && _platform2.default.os.family === 'Android',\n\t          bada: _bowser2.default.bada,\n\t          blackberry: _bowser2.default.blackberry,\n\t          chromeOS: _bowser2.default.chromeos,\n\t          firefoxOS: _bowser2.default.firefoxos,\n\t          iOS: _bowser2.default.ios && _platform2.default.os.family === 'iOS',\n\t          linux: _bowser2.default.linux && ['Ubuntu', 'Debian', 'Fedora', 'Red Hat', 'SuSE'].contains(_platform2.default.os.family),\n\t          macOS: /Mac OS/.test(ua) && _bowser2.default.mac && ['OS X', 'macOS'].contains(_platform2.default.os.family),\n\t          sailfish: _bowser2.default.sailfish,\n\t          tizen: _bowser2.default.tizen,\n\t          windows: _bowser2.default.windows && ['Windows', 'Windows Server 2008 R2 / 7', 'Windows Server 2008 / Vista', 'Windows XP'].contains(_platform2.default.os.family),\n\t          windowsPhone: _bowser2.default.windowsphone && _platform2.default.os.family === 'Windows Phone'\n\t        });\n\t      } catch (e) {\n\t        throw e;\n\t      }\n\t\n\t      return o;\n\t    }\n\t  }, {\n\t    key: 'getBrowser',\n\t    value: function getBrowser() {\n\t      var b = {};\n\t\n\t      try {\n\t        b.inherit({\n\t          name: _bowser2.default.name || _platform2.default.name,\n\t          version: _bowser2.default.version,\n\t          // WebApp mode in iOS\n\t          webApp: navigator.standalone,\n\t          engine: {\n\t            blink: _bowser2.default.blink && _platform2.default.layout === 'Blink',\n\t            gecko: _bowser2.default.gecko && _platform2.default.layout === 'Gecko',\n\t            trident: _bowser2.default.msie && _platform2.default.layout === 'Trident',\n\t            edgeHTML: _bowser2.default.msedge && _platform2.default.layout === 'EdgeHTML',\n\t            webkit: _bowser2.default.webkit && _platform2.default.layout === 'WebKit'\n\t          },\n\t          android: _bowser2.default.android, // native android browser\n\t          arora: /Arora/.test(ua),\n\t          bada: _bowser2.default.bada, // native bada browser\n\t          blackberry: _bowser2.default.blackberry, // native blackberry browser\n\t          chrome: _bowser2.default.chrome && _platform2.default.name.contains('Chrome'),\n\t          chromeMobile: _bowser2.default.chrome && _bowser2.default.mobile && _platform2.default.name === 'Chrome Modile',\n\t          cocoonJS: navigator.isCocoonJS,\n\t          edge: _bowser2.default.msedge && _platform2.default.name === 'Microsoft Edge',\n\t          ejecta: typeof window.ejecta !== 'undefined',\n\t          electron: _platform2.default.name === 'Electron',\n\t          epiphany: /Epiphany/.test(ua),\n\t          firefox: _bowser2.default.firefox && _platform2.default.name.contains('Firefox'),\n\t          firefoxMobile: _bowser2.default.firefox && ['Firefox for iOS', 'Firefox Mobile'].contains(_platform2.default.name),\n\t          ie: _bowser2.default.msie && _platform2.default.name.contains('IE'),\n\t          ieMobile: _bowser2.default.msie && _bowser2.default.mobile && _platform2.default.name === 'IE Mobile',\n\t          midori: /Midori/.test(ua),\n\t          opera: _bowser2.default.opera && _platform2.default.name.contains('Opera'),\n\t          operaMobile: _bowser2.default.opera && _bowser2.default.mobile && ['Opera Mini', 'Opera Mobile'].contains(_platform2.default.name),\n\t          phantom: _bowser2.default.phantom && _platform2.default.name === 'PhantomJS',\n\t          safari: _bowser2.default.safari && _platform2.default.name.contains('Safari'),\n\t          safariMobile: /Mobile Safari/.test(ua) && _bowser2.default.safari && _bowser2.default.ios && _bowser2.default.mobile && _platform2.default.name.contains('Safari'),\n\t          sailfish: _bowser2.default.sailfish,\n\t          seamonkey: _bowser2.default.seamonkey && _platform2.default.name === 'SeaMonkey',\n\t          samsung: _bowser2.default.samsungBrowser, // native samsung browser\n\t          silk: _bowser2.default.silk && _platform2.default.name === 'Silk', // native amazon kindle browser\n\t          tizen: _bowser2.default.tizen, //- native browser\n\t          webOS: _bowser2.default.webos //- native browser\n\t        });\n\t      } catch (e) {\n\t        throw e;\n\t      }\n\t\n\t      return b;\n\t    }\n\t  }, {\n\t    key: 'getAudio',\n\t    value: function getAudio() {\n\t      var a = {\n\t        audioData: !!window.Audio,\n\t        webAudio: !!(window.webkitAudioContext || window.AudioContext)\n\t      };\n\t\n\t      try {\n\t        var audioElement = document.createElement('audio');\n\t\n\t        if (!!audioElement.canPlayType) {\n\t          a.inherit({\n\t            ogg: audioElement.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n\t            opus: audioElement.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n\t            mp3: audioElement.canPlayType('audio/mpeg;').replace(/^no$/, ''),\n\t            // Mimetypes accepted:\n\t            //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n\t            //   bit.ly/iphoneoscodecs\n\t            wav: audioElement.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n\t            m4a: audioElement.canPlayType('audio/x-m4a;').replace(/^no$/, '') || audioElement.canPlayType('audio/aac;').replace(/^no$/, ''),\n\t            webm: audioElement.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')\n\t          });\n\t        }\n\t      } catch (e) {\n\t        throw e;\n\t      }\n\t\n\t      return a;\n\t    }\n\t  }, {\n\t    key: 'checkFeature',\n\t    value: function checkFeature(f) {\n\t      var el = null;\n\t\n\t      try {\n\t        if (f === 'css3d') {\n\t          el = document.createElement('p');\n\t          var hasCSS3D = false;\n\t\n\t          // Add it to the body to get the computed style.\n\t          document.body.insertBefore(el, null);\n\t\n\t          ['-webkit-transform', '-o-transform', '-ms-transform', '-moz-transform', 'transform'].each(function (t) {\n\t            if (!!el.style[t]) {\n\t              el.style[t] = 'translate3d(1px,1px,1px)';\n\t              hasCSS3D = window.getComputedStyle(el).getPropertyValue(t);\n\t            }\n\t          });\n\t\n\t          document.body.removeChild(el);\n\t\n\t          return !!hasCSS3D && hasCSS3D.length > 0 && hasCSS3D !== 'none';\n\t        } else if (f === 'fullscreen') {\n\t          el = document.createElement('canvas');\n\t          return !!el.requestFullscreen || !!el.webkitRequestFullscreen || !!el.msRequestFullscreen || !!el.mozRequestFullScreen;\n\t        } else if (f === 'webGL') {\n\t          el = document.createElement('canvas');\n\t          return !!window.WebGLRenderingContext && (el.getContext('webgl') || el.getContext('experimental-webgl'));\n\t        }\n\t      } catch (error) {\n\t        return false;\n\t      }\n\t\n\t      return false;\n\t    }\n\t  }, {\n\t    key: 'getFeatures',\n\t    value: function getFeatures() {\n\t      var f = {};\n\t\n\t      try {\n\t        navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;\n\t\n\t        f.inherit({\n\t          async: _featureJs2.default.async,\n\t          addEventListener: _featureJs2.default.addEventListener,\n\t          canvas: _featureJs2.default.canvas,\n\t          classList: _featureJs2.default.classList,\n\t          cors: _featureJs2.default.cors,\n\t          contextMenu: _featureJs2.default.contextMenu,\n\t          css3D: this.checkFeature('css3d') && _featureJs2.default.css3Dtransform,\n\t          cssTransform: _featureJs2.default.cssTransform,\n\t          cssTransition: _featureJs2.default.cssTransition,\n\t          defer: _featureJs2.default.defer,\n\t          file: !!window.File && !!window.FileReader && !!window.FileList && !!window.Blob,\n\t          fileSystem: !!window.requestFileSystem,\n\t          fullscreen: this.checkFeature('fullscreen'),\n\t          // fullscreenKeyboard: window.Element && Element['ALLOW_KEYBOARD_INPUT'],\n\t          geolocation: _featureJs2.default.geolocation,\n\t          getUserMedia: !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia),\n\t          historyAPI: _featureJs2.default.historyAPI,\n\t          littleEndian: typeof Int8Array !== 'undefined' && new Int8Array(new Int16Array([1]).buffer)[0] > 0,\n\t          localStorage: _featureJs2.default.localStorage,\n\t          matchMedia: _featureJs2.default.matchMedia,\n\t          motion: _featureJs2.default.deviceMotion,\n\t          mspointer: window.navigator.msPointerEnabled || window.navigator.pointerEnabled,\n\t          orientation: _featureJs2.default.deviceOrientation,\n\t          pictureElement: _featureJs2.default.pictureElement,\n\t          pixelRatio: window.devicePixelRatio || 1,\n\t          placeholder: _featureJs2.default.placeholder,\n\t          pointerLock: 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document,\n\t          querySelectorAll: _featureJs2.default.querySelectorAll,\n\t          quirksMode: !(document.compatMode === 'CSS1Compat'),\n\t          remUnit: _featureJs2.default.remUnit,\n\t          serviceWorker: _featureJs2.default.serviceWorker,\n\t          sizes: _featureJs2.default.sizes,\n\t          srcset: _featureJs2.default.srcset,\n\t          svg: _featureJs2.default.svg,\n\t          touch: ('ontouchstart' in document.documentElement || window.navigator.maxTouchPoints && window.navigator.maxTouchPoints > 1) && _featureJs2.default.touch,\n\t          typedArray: typeof Int8Array !== 'undefined',\n\t          vibration: navigator.vibrate,\n\t          viewportUnit: _featureJs2.default.viewportUnit,\n\t          webGL: this.checkFeature('webGL') && _featureJs2.default.webGL,\n\t          worker: !!window.Worker\n\t        });\n\t      } catch (e) {\n\t        throw e;\n\t      }\n\t\n\t      return f;\n\t    }\n\t  }]);\n\t\n\t  return Detector;\n\t}();\n\t\n\texports.default = Detector;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Bowser - a browser detector\n\t * https://github.com/ded/bowser\n\t * MIT License | (c) Dustin Diaz 2015\n\t */\n\t\n\t!function (root, name, definition) {\n\t  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n\t  else if (true) __webpack_require__(6)(name, definition)\n\t  else root[name] = definition()\n\t}(this, 'bowser', function () {\n\t  /**\n\t    * See useragents.js for examples of navigator.userAgent\n\t    */\n\t\n\t  var t = true\n\t\n\t  function detect(ua) {\n\t\n\t    function getFirstMatch(regex) {\n\t      var match = ua.match(regex);\n\t      return (match && match.length > 1 && match[1]) || '';\n\t    }\n\t\n\t    function getSecondMatch(regex) {\n\t      var match = ua.match(regex);\n\t      return (match && match.length > 1 && match[2]) || '';\n\t    }\n\t\n\t    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n\t      , likeAndroid = /like android/i.test(ua)\n\t      , android = !likeAndroid && /android/i.test(ua)\n\t      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n\t      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n\t      , chromeos = /CrOS/.test(ua)\n\t      , silk = /silk/i.test(ua)\n\t      , sailfish = /sailfish/i.test(ua)\n\t      , tizen = /tizen/i.test(ua)\n\t      , webos = /(web|hpw)os/i.test(ua)\n\t      , windowsphone = /windows phone/i.test(ua)\n\t      , samsungBrowser = /SamsungBrowser/i.test(ua)\n\t      , windows = !windowsphone && /windows/i.test(ua)\n\t      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n\t      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n\t      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\n\t      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n\t      , tablet = /tablet/i.test(ua)\n\t      , mobile = !tablet && /[^-]mobi/i.test(ua)\n\t      , xbox = /xbox/i.test(ua)\n\t      , result\n\t\n\t    if (/opera/i.test(ua)) {\n\t      //  an old Opera\n\t      result = {\n\t        name: 'Opera'\n\t      , opera: t\n\t      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n\t      }\n\t    } else if (/opr|opios/i.test(ua)) {\n\t      // a new Opera\n\t      result = {\n\t        name: 'Opera'\n\t        , opera: t\n\t        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n\t      }\n\t    }\n\t    else if (/SamsungBrowser/i.test(ua)) {\n\t      result = {\n\t        name: 'Samsung Internet for Android'\n\t        , samsungBrowser: t\n\t        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/coast/i.test(ua)) {\n\t      result = {\n\t        name: 'Opera Coast'\n\t        , coast: t\n\t        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/yabrowser/i.test(ua)) {\n\t      result = {\n\t        name: 'Yandex Browser'\n\t      , yandexbrowser: t\n\t      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/ucbrowser/i.test(ua)) {\n\t      result = {\n\t          name: 'UC Browser'\n\t        , ucbrowser: t\n\t        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n\t      }\n\t    }\n\t    else if (/mxios/i.test(ua)) {\n\t      result = {\n\t        name: 'Maxthon'\n\t        , maxthon: t\n\t        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n\t      }\n\t    }\n\t    else if (/epiphany/i.test(ua)) {\n\t      result = {\n\t        name: 'Epiphany'\n\t        , epiphany: t\n\t        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n\t      }\n\t    }\n\t    else if (/puffin/i.test(ua)) {\n\t      result = {\n\t        name: 'Puffin'\n\t        , puffin: t\n\t        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/sleipnir/i.test(ua)) {\n\t      result = {\n\t        name: 'Sleipnir'\n\t        , sleipnir: t\n\t        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n\t      }\n\t    }\n\t    else if (/k-meleon/i.test(ua)) {\n\t      result = {\n\t        name: 'K-Meleon'\n\t        , kMeleon: t\n\t        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n\t      }\n\t    }\n\t    else if (windowsphone) {\n\t      result = {\n\t        name: 'Windows Phone'\n\t      , windowsphone: t\n\t      }\n\t      if (edgeVersion) {\n\t        result.msedge = t\n\t        result.version = edgeVersion\n\t      }\n\t      else {\n\t        result.msie = t\n\t        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/msie|trident/i.test(ua)) {\n\t      result = {\n\t        name: 'Internet Explorer'\n\t      , msie: t\n\t      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    } else if (chromeos) {\n\t      result = {\n\t        name: 'Chrome'\n\t      , chromeos: t\n\t      , chromeBook: t\n\t      , chrome: t\n\t      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    } else if (/chrome.+? edge/i.test(ua)) {\n\t      result = {\n\t        name: 'Microsoft Edge'\n\t      , msedge: t\n\t      , version: edgeVersion\n\t      }\n\t    }\n\t    else if (/vivaldi/i.test(ua)) {\n\t      result = {\n\t        name: 'Vivaldi'\n\t        , vivaldi: t\n\t        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n\t      }\n\t    }\n\t    else if (sailfish) {\n\t      result = {\n\t        name: 'Sailfish'\n\t      , sailfish: t\n\t      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/seamonkey\\//i.test(ua)) {\n\t      result = {\n\t        name: 'SeaMonkey'\n\t      , seamonkey: t\n\t      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n\t      result = {\n\t        name: 'Firefox'\n\t      , firefox: t\n\t      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n\t      }\n\t      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n\t        result.firefoxos = t\n\t      }\n\t    }\n\t    else if (silk) {\n\t      result =  {\n\t        name: 'Amazon Silk'\n\t      , silk: t\n\t      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/phantom/i.test(ua)) {\n\t      result = {\n\t        name: 'PhantomJS'\n\t      , phantom: t\n\t      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/slimerjs/i.test(ua)) {\n\t      result = {\n\t        name: 'SlimerJS'\n\t        , slimer: t\n\t        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n\t      result = {\n\t        name: 'BlackBerry'\n\t      , blackberry: t\n\t      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (webos) {\n\t      result = {\n\t        name: 'WebOS'\n\t      , webos: t\n\t      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n\t      };\n\t      /touchpad\\//i.test(ua) && (result.touchpad = t)\n\t    }\n\t    else if (/bada/i.test(ua)) {\n\t      result = {\n\t        name: 'Bada'\n\t      , bada: t\n\t      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n\t      };\n\t    }\n\t    else if (tizen) {\n\t      result = {\n\t        name: 'Tizen'\n\t      , tizen: t\n\t      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n\t      };\n\t    }\n\t    else if (/qupzilla/i.test(ua)) {\n\t      result = {\n\t        name: 'QupZilla'\n\t        , qupzilla: t\n\t        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n\t      }\n\t    }\n\t    else if (/chromium/i.test(ua)) {\n\t      result = {\n\t        name: 'Chromium'\n\t        , chromium: t\n\t        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n\t      }\n\t    }\n\t    else if (/chrome|crios|crmo/i.test(ua)) {\n\t      result = {\n\t        name: 'Chrome'\n\t        , chrome: t\n\t        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n\t      }\n\t    }\n\t    else if (android) {\n\t      result = {\n\t        name: 'Android'\n\t        , version: versionIdentifier\n\t      }\n\t    }\n\t    else if (/safari|applewebkit/i.test(ua)) {\n\t      result = {\n\t        name: 'Safari'\n\t      , safari: t\n\t      }\n\t      if (versionIdentifier) {\n\t        result.version = versionIdentifier\n\t      }\n\t    }\n\t    else if (iosdevice) {\n\t      result = {\n\t        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n\t      }\n\t      // WTF: version is not part of user agent in web apps\n\t      if (versionIdentifier) {\n\t        result.version = versionIdentifier\n\t      }\n\t    }\n\t    else if(/googlebot/i.test(ua)) {\n\t      result = {\n\t        name: 'Googlebot'\n\t      , googlebot: t\n\t      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n\t      }\n\t    }\n\t    else {\n\t      result = {\n\t        name: getFirstMatch(/^(.*)\\/(.*) /),\n\t        version: getSecondMatch(/^(.*)\\/(.*) /)\n\t     };\n\t   }\n\t\n\t    // set webkit or gecko flag for browsers based on these engines\n\t    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n\t      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n\t        result.name = result.name || \"Blink\"\n\t        result.blink = t\n\t      } else {\n\t        result.name = result.name || \"Webkit\"\n\t        result.webkit = t\n\t      }\n\t      if (!result.version && versionIdentifier) {\n\t        result.version = versionIdentifier\n\t      }\n\t    } else if (!result.opera && /gecko\\//i.test(ua)) {\n\t      result.name = result.name || \"Gecko\"\n\t      result.gecko = t\n\t      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n\t    }\n\t\n\t    // set OS flags for platforms that have multiple browsers\n\t    if (!result.windowsphone && !result.msedge && (android || result.silk)) {\n\t      result.android = t\n\t    } else if (!result.windowsphone && !result.msedge && iosdevice) {\n\t      result[iosdevice] = t\n\t      result.ios = t\n\t    } else if (mac) {\n\t      result.mac = t\n\t    } else if (xbox) {\n\t      result.xbox = t\n\t    } else if (windows) {\n\t      result.windows = t\n\t    } else if (linux) {\n\t      result.linux = t\n\t    }\n\t\n\t    function getWindowsVersion (s) {\n\t      switch (s) {\n\t        case 'NT': return 'NT'\n\t        case 'XP': return 'XP'\n\t        case 'NT 5.0': return '2000'\n\t        case 'NT 5.1': return 'XP'\n\t        case 'NT 5.2': return '2003'\n\t        case 'NT 6.0': return 'Vista'\n\t        case 'NT 6.1': return '7'\n\t        case 'NT 6.2': return '8'\n\t        case 'NT 6.3': return '8.1'\n\t        case 'NT 10.0': return '10'\n\t        default: return undefined\n\t      }\n\t    }\n\t    \n\t    // OS version extraction\n\t    var osVersion = '';\n\t    if (result.windows) {\n\t      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n\t    } else if (result.windowsphone) {\n\t      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n\t    } else if (result.mac) {\n\t      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n\t      osVersion = osVersion.replace(/[_\\s]/g, '.');\n\t    } else if (iosdevice) {\n\t      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n\t      osVersion = osVersion.replace(/[_\\s]/g, '.');\n\t    } else if (android) {\n\t      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n\t    } else if (result.webos) {\n\t      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n\t    } else if (result.blackberry) {\n\t      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n\t    } else if (result.bada) {\n\t      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n\t    } else if (result.tizen) {\n\t      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n\t    }\n\t    if (osVersion) {\n\t      result.osversion = osVersion;\n\t    }\n\t\n\t    // device type extraction\n\t    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n\t    if (\n\t         tablet\n\t      || nexusTablet\n\t      || iosdevice == 'ipad'\n\t      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n\t      || result.silk\n\t    ) {\n\t      result.tablet = t\n\t    } else if (\n\t         mobile\n\t      || iosdevice == 'iphone'\n\t      || iosdevice == 'ipod'\n\t      || android\n\t      || nexusMobile\n\t      || result.blackberry\n\t      || result.webos\n\t      || result.bada\n\t    ) {\n\t      result.mobile = t\n\t    }\n\t\n\t    // Graded Browser Support\n\t    // http://developer.yahoo.com/yui/articles/gbs\n\t    if (result.msedge ||\n\t        (result.msie && result.version >= 10) ||\n\t        (result.yandexbrowser && result.version >= 15) ||\n\t\t\t    (result.vivaldi && result.version >= 1.0) ||\n\t        (result.chrome && result.version >= 20) ||\n\t        (result.samsungBrowser && result.version >= 4) ||\n\t        (result.firefox && result.version >= 20.0) ||\n\t        (result.safari && result.version >= 6) ||\n\t        (result.opera && result.version >= 10.0) ||\n\t        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n\t        (result.blackberry && result.version >= 10.1)\n\t        || (result.chromium && result.version >= 20)\n\t        ) {\n\t      result.a = t;\n\t    }\n\t    else if ((result.msie && result.version < 10) ||\n\t        (result.chrome && result.version < 20) ||\n\t        (result.firefox && result.version < 20.0) ||\n\t        (result.safari && result.version < 6) ||\n\t        (result.opera && result.version < 10.0) ||\n\t        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n\t        || (result.chromium && result.version < 20)\n\t        ) {\n\t      result.c = t\n\t    } else result.x = t\n\t\n\t    return result\n\t  }\n\t\n\t  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\t\n\t  bowser.test = function (browserList) {\n\t    for (var i = 0; i < browserList.length; ++i) {\n\t      var browserItem = browserList[i];\n\t      if (typeof browserItem=== 'string') {\n\t        if (browserItem in bowser) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Get version precisions count\n\t   *\n\t   * @example\n\t   *   getVersionPrecision(\"1.10.3\") // 3\n\t   *\n\t   * @param  {string} version\n\t   * @return {number}\n\t   */\n\t  function getVersionPrecision(version) {\n\t    return version.split(\".\").length;\n\t  }\n\t\n\t  /**\n\t   * Array::map polyfill\n\t   *\n\t   * @param  {Array} arr\n\t   * @param  {Function} iterator\n\t   * @return {Array}\n\t   */\n\t  function map(arr, iterator) {\n\t    var result = [], i;\n\t    if (Array.prototype.map) {\n\t      return Array.prototype.map.call(arr, iterator);\n\t    }\n\t    for (i = 0; i < arr.length; i++) {\n\t      result.push(iterator(arr[i]));\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Calculate browser version weight\n\t   *\n\t   * @example\n\t   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n\t   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n\t   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n\t   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n\t   *\n\t   * @param  {Array<String>} versions versions to compare\n\t   * @return {Number} comparison result\n\t   */\n\t  function compareVersions(versions) {\n\t    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n\t    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n\t    var chunks = map(versions, function (version) {\n\t      var delta = precision - getVersionPrecision(version);\n\t\n\t      // 2) \"9\" -> \"9.0\" (for precision = 2)\n\t      version = version + new Array(delta + 1).join(\".0\");\n\t\n\t      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n\t      return map(version.split(\".\"), function (chunk) {\n\t        return new Array(20 - chunk.length).join(\"0\") + chunk;\n\t      }).reverse();\n\t    });\n\t\n\t    // iterate in reverse order by reversed chunks array\n\t    while (--precision >= 0) {\n\t      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n\t      if (chunks[0][precision] > chunks[1][precision]) {\n\t        return 1;\n\t      }\n\t      else if (chunks[0][precision] === chunks[1][precision]) {\n\t        if (precision === 0) {\n\t          // all version chunks are same\n\t          return 0;\n\t        }\n\t      }\n\t      else {\n\t        return -1;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if browser is unsupported\n\t   *\n\t   * @example\n\t   *   bowser.isUnsupportedBrowser({\n\t   *     msie: \"10\",\n\t   *     firefox: \"23\",\n\t   *     chrome: \"29\",\n\t   *     safari: \"5.1\",\n\t   *     opera: \"16\",\n\t   *     phantom: \"534\"\n\t   *   });\n\t   *\n\t   * @param  {Object}  minVersions map of minimal version to browser\n\t   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n\t   * @param  {String}  [ua] user agent string\n\t   * @return {Boolean}\n\t   */\n\t  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n\t    var _bowser = bowser;\n\t\n\t    // make strictMode param optional with ua param usage\n\t    if (typeof strictMode === 'string') {\n\t      ua = strictMode;\n\t      strictMode = void(0);\n\t    }\n\t\n\t    if (strictMode === void(0)) {\n\t      strictMode = false;\n\t    }\n\t    if (ua) {\n\t      _bowser = detect(ua);\n\t    }\n\t\n\t    var version = \"\" + _bowser.version;\n\t    for (var browser in minVersions) {\n\t      if (minVersions.hasOwnProperty(browser)) {\n\t        if (_bowser[browser]) {\n\t          if (typeof minVersions[browser] !== 'string') {\n\t            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n\t          }\n\t\n\t          // browser version and min supported version.\n\t          return compareVersions([version, minVersions[browser]]) < 0;\n\t        }\n\t      }\n\t    }\n\t\n\t    return strictMode; // not found\n\t  }\n\t\n\t  /**\n\t   * Check if browser is supported\n\t   *\n\t   * @param  {Object} minVersions map of minimal version to browser\n\t   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n\t   * @param  {String}  [ua] user agent string\n\t   * @return {Boolean}\n\t   */\n\t  function check(minVersions, strictMode, ua) {\n\t    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n\t  }\n\t\n\t  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n\t  bowser.compareVersions = compareVersions;\n\t  bowser.check = check;\n\t\n\t  /*\n\t   * Set our detect method to the main bowser object so we can\n\t   * reuse it to test other user agents.\n\t   * This is needed to implement future tests.\n\t   */\n\t  bowser._detect = detect;\n\t\n\t  return bowser\n\t});\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t/*! FeatureJS 0.0.1, (thanks to http://featurejs.com) */\n\t!function(e,t,n){\"use strict\";var r=t.documentElement,i={create:function(e){return t.createElement(e)},old:!!/(Android\\s(1.|2.))|(Silk\\/1.)/i.test(navigator.userAgent),pfx:function(){var e=t.createElement(\"dummy\").style,r=[\"Webkit\",\"Moz\",\"O\",\"ms\"],i={};return function(t){if(\"undefined\"==typeof i[t]){var o=t.charAt(0).toUpperCase()+t.substr(1),a=(t+\" \"+r.join(o+\" \")+o).split(\" \");i[t]=null;for(var c in a)if(e[a[c]]!==n){i[t]=a[c];break}}return i[t]}}()},o={css3Dtransform:function(){var e=!i.old&&null!==i.pfx(\"perspective\");return!!e}(),cssTransform:function(){var e=!i.old&&null!==i.pfx(\"transformOrigin\");return!!e}(),cssTransition:function(){var e=null!==i.pfx(\"transition\");return!!e}(),addEventListener:!!e.addEventListener,querySelectorAll:!!t.querySelectorAll,matchMedia:!!e.matchMedia,deviceMotion:\"DeviceMotionEvent\"in e,deviceOrientation:\"DeviceOrientationEvent\"in e,contextMenu:\"contextMenu\"in r&&\"HTMLMenuItemElement\"in e,classList:\"classList\"in r,placeholder:\"placeholder\"in i.create(\"input\"),localStorage:function(){var e=\"x\";try{return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(t){return!1}}(),historyAPI:e.history&&\"pushState\"in e.history,serviceWorker:\"serviceWorker\"in navigator,viewportUnit:function(e){try{e.style.width=\"1vw\";var t=\"\"!==e.style.width;return!!t}catch(n){return!1}}(i.create(\"dummy\")),remUnit:function(e){try{e.style.width=\"1rem\";var t=\"\"!==e.style.width;return!!t}catch(n){return!1}}(i.create(\"dummy\")),canvas:function(e){return!(!e.getContext||!e.getContext(\"2d\"))}(i.create(\"canvas\")),svg:!!t.createElementNS&&!!t.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\").createSVGRect,webGL:function(t){try{return!(!e.WebGLRenderingContext||!t.getContext(\"webgl\")&&!t.getContext(\"experimental-webgl\"))}catch(n){return!1}}(i.create(\"canvas\")),cors:\"XMLHttpRequest\"in e&&\"withCredentials\"in new XMLHttpRequest,touch:!!(\"ontouchstart\"in e||e.navigator&&e.navigator.msPointerEnabled&&e.MSGesture||e.DocumentTouch&&t instanceof DocumentTouch),async:\"async\"in i.create(\"script\"),defer:\"defer\"in i.create(\"script\"),geolocation:\"geolocation\"in navigator,srcset:\"srcset\"in i.create(\"img\"),sizes:\"sizes\"in i.create(\"img\"),pictureElement:\"HTMLPictureElement\"in e,testAll:function(){var e=\" js\";for(var t in this)\"testAll\"!==t&&\"constructor\"!==t&&this[t]&&(e+=\" \"+t);r.className+=e.toLowerCase()}};e.feature=o}(window,document),module.exports=window.feature;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*!\n\t * Platform.js <https://mths.be/platform>\n\t * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>\n\t * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\n\t * Available under MIT license <https://mths.be/mit>\n\t */\n\t;(function() {\n\t  'use strict';\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = (objectTypes[typeof window] && window) || this;\n\t\n\t  /** Backup possible global object. */\n\t  var oldRoot = root;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n\t  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\t\n\t  /**\n\t   * Used as the maximum length of an array-like object.\n\t   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n\t   * for more details.\n\t   */\n\t  var maxSafeInteger = Math.pow(2, 53) - 1;\n\t\n\t  /** Regular expression to detect Opera. */\n\t  var reOpera = /\\bOpera/;\n\t\n\t  /** Possible global object. */\n\t  var thisBinding = this;\n\t\n\t  /** Used for native method references. */\n\t  var objectProto = Object.prototype;\n\t\n\t  /** Used to check for own properties of an object. */\n\t  var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t  /** Used to resolve the internal `[[Class]]` of values. */\n\t  var toString = objectProto.toString;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Capitalizes a string value.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to capitalize.\n\t   * @returns {string} The capitalized string.\n\t   */\n\t  function capitalize(string) {\n\t    string = String(string);\n\t    return string.charAt(0).toUpperCase() + string.slice(1);\n\t  }\n\t\n\t  /**\n\t   * A utility function to clean up the OS name.\n\t   *\n\t   * @private\n\t   * @param {string} os The OS name to clean up.\n\t   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n\t   * @param {string} [label] A label for the OS.\n\t   */\n\t  function cleanupOS(os, pattern, label) {\n\t    // Platform tokens are defined at:\n\t    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n\t    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n\t    var data = {\n\t      '10.0': '10',\n\t      '6.4':  '10 Technical Preview',\n\t      '6.3':  '8.1',\n\t      '6.2':  '8',\n\t      '6.1':  'Server 2008 R2 / 7',\n\t      '6.0':  'Server 2008 / Vista',\n\t      '5.2':  'Server 2003 / XP 64-bit',\n\t      '5.1':  'XP',\n\t      '5.01': '2000 SP1',\n\t      '5.0':  '2000',\n\t      '4.0':  'NT',\n\t      '4.90': 'ME'\n\t    };\n\t    // Detect Windows version from platform tokens.\n\t    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\n\t        (data = data[/[\\d.]+$/.exec(os)])) {\n\t      os = 'Windows ' + data;\n\t    }\n\t    // Correct character case and cleanup string.\n\t    os = String(os);\n\t\n\t    if (pattern && label) {\n\t      os = os.replace(RegExp(pattern, 'i'), label);\n\t    }\n\t\n\t    os = format(\n\t      os.replace(/ ce$/i, ' CE')\n\t        .replace(/\\bhpw/i, 'web')\n\t        .replace(/\\bMacintosh\\b/, 'Mac OS')\n\t        .replace(/_PowerPC\\b/i, ' OS')\n\t        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\n\t        .replace(/\\bMac (OS X)\\b/, '$1')\n\t        .replace(/\\/(\\d)/, ' $1')\n\t        .replace(/_/g, '.')\n\t        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\n\t        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\n\t        .replace(/\\b(Windows Phone) OS\\b/, '$1')\n\t        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\n\t        .split(' on ')[0]\n\t    );\n\t\n\t    return os;\n\t  }\n\t\n\t  /**\n\t   * An iteration utility for arrays and objects.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} object The object to iterate over.\n\t   * @param {Function} callback The function called per iteration.\n\t   */\n\t  function each(object, callback) {\n\t    var index = -1,\n\t        length = object ? object.length : 0;\n\t\n\t    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n\t      while (++index < length) {\n\t        callback(object[index], index, object);\n\t      }\n\t    } else {\n\t      forOwn(object, callback);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trim and conditionally capitalize string values.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to format.\n\t   * @returns {string} The formatted string.\n\t   */\n\t  function format(string) {\n\t    string = trim(string);\n\t    return /^(?:webOS|i(?:OS|P))/.test(string)\n\t      ? string\n\t      : capitalize(string);\n\t  }\n\t\n\t  /**\n\t   * Iterates over an object's own properties, executing the `callback` for each.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to iterate over.\n\t   * @param {Function} callback The function executed per own property.\n\t   */\n\t  function forOwn(object, callback) {\n\t    for (var key in object) {\n\t      if (hasOwnProperty.call(object, key)) {\n\t        callback(object[key], key, object);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Gets the internal `[[Class]]` of a value.\n\t   *\n\t   * @private\n\t   * @param {*} value The value.\n\t   * @returns {string} The `[[Class]]`.\n\t   */\n\t  function getClassOf(value) {\n\t    return value == null\n\t      ? capitalize(value)\n\t      : toString.call(value).slice(8, -1);\n\t  }\n\t\n\t  /**\n\t   * Host objects can return type values that are different from their actual\n\t   * data type. The objects we are concerned with usually return non-primitive\n\t   * types of \"object\", \"function\", or \"unknown\".\n\t   *\n\t   * @private\n\t   * @param {*} object The owner of the property.\n\t   * @param {string} property The property to check.\n\t   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n\t   */\n\t  function isHostType(object, property) {\n\t    var type = object != null ? typeof object[property] : 'number';\n\t    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\n\t      (type == 'object' ? !!object[property] : true);\n\t  }\n\t\n\t  /**\n\t   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to qualify.\n\t   * @returns {string} The qualified string.\n\t   */\n\t  function qualify(string) {\n\t    return String(string).replace(/([ -])(?!$)/g, '$1?');\n\t  }\n\t\n\t  /**\n\t   * A bare-bones `Array#reduce` like utility function.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} callback The function called per iteration.\n\t   * @returns {*} The accumulated result.\n\t   */\n\t  function reduce(array, callback) {\n\t    var accumulator = null;\n\t    each(array, function(value, index) {\n\t      accumulator = callback(accumulator, value, index, array);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * Removes leading and trailing whitespace from a string.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to trim.\n\t   * @returns {string} The trimmed string.\n\t   */\n\t  function trim(string) {\n\t    return String(string).replace(/^ +| +$/g, '');\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Creates a new platform object.\n\t   *\n\t   * @memberOf platform\n\t   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n\t   *  context object.\n\t   * @returns {Object} A platform object.\n\t   */\n\t  function parse(ua) {\n\t\n\t    /** The environment context object. */\n\t    var context = root;\n\t\n\t    /** Used to flag when a custom context is provided. */\n\t    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\t\n\t    // Juggle arguments.\n\t    if (isCustomContext) {\n\t      context = ua;\n\t      ua = null;\n\t    }\n\t\n\t    /** Browser navigator object. */\n\t    var nav = context.navigator || {};\n\t\n\t    /** Browser user agent string. */\n\t    var userAgent = nav.userAgent || '';\n\t\n\t    ua || (ua = userAgent);\n\t\n\t    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n\t    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\t\n\t    /** Used to detect if browser is like Chrome. */\n\t    var likeChrome = isCustomContext\n\t      ? !!nav.likeChrome\n\t      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\t\n\t    /** Internal `[[Class]]` value shortcuts. */\n\t    var objectClass = 'Object',\n\t        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n\t        enviroClass = isCustomContext ? objectClass : 'Environment',\n\t        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\n\t        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\t\n\t    /** Detect Java environments. */\n\t    var java = /\\bJava/.test(javaClass) && context.java;\n\t\n\t    /** Detect Rhino. */\n\t    var rhino = java && getClassOf(context.environment) == enviroClass;\n\t\n\t    /** A character to represent alpha. */\n\t    var alpha = java ? 'a' : '\\u03b1';\n\t\n\t    /** A character to represent beta. */\n\t    var beta = java ? 'b' : '\\u03b2';\n\t\n\t    /** Browser document object. */\n\t    var doc = context.document || {};\n\t\n\t    /**\n\t     * Detect Opera browser (Presto-based).\n\t     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n\t     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n\t     */\n\t    var opera = context.operamini || context.opera;\n\t\n\t    /** Opera `[[Class]]`. */\n\t    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\n\t      ? operaClass\n\t      : (opera = null);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /** Temporary variable used over the script's lifetime. */\n\t    var data;\n\t\n\t    /** The CPU architecture. */\n\t    var arch = ua;\n\t\n\t    /** Platform description array. */\n\t    var description = [];\n\t\n\t    /** Platform alpha/beta indicator. */\n\t    var prerelease = null;\n\t\n\t    /** A flag to indicate that environment features should be used to resolve the platform. */\n\t    var useFeatures = ua == userAgent;\n\t\n\t    /** The browser/environment version. */\n\t    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\t\n\t    /** A flag to indicate if the OS ends with \"/ Version\" */\n\t    var isSpecialCasedOS;\n\t\n\t    /* Detectable layout engines (order is important). */\n\t    var layout = getLayout([\n\t      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\n\t      'Trident',\n\t      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\n\t      'iCab',\n\t      'Presto',\n\t      'NetFront',\n\t      'Tasman',\n\t      'KHTML',\n\t      'Gecko'\n\t    ]);\n\t\n\t    /* Detectable browser names (order is important). */\n\t    var name = getName([\n\t      'Adobe AIR',\n\t      'Arora',\n\t      'Avant Browser',\n\t      'Breach',\n\t      'Camino',\n\t      'Electron',\n\t      'Epiphany',\n\t      'Fennec',\n\t      'Flock',\n\t      'Galeon',\n\t      'GreenBrowser',\n\t      'iCab',\n\t      'Iceweasel',\n\t      'K-Meleon',\n\t      'Konqueror',\n\t      'Lunascape',\n\t      'Maxthon',\n\t      { 'label': 'Microsoft Edge', 'pattern': 'Edge' },\n\t      'Midori',\n\t      'Nook Browser',\n\t      'PaleMoon',\n\t      'PhantomJS',\n\t      'Raven',\n\t      'Rekonq',\n\t      'RockMelt',\n\t      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },\n\t      'SeaMonkey',\n\t      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n\t      'Sleipnir',\n\t      'SlimBrowser',\n\t      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\n\t      'Sunrise',\n\t      'Swiftfox',\n\t      'Waterfox',\n\t      'WebPositive',\n\t      'Opera Mini',\n\t      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\n\t      'Opera',\n\t      { 'label': 'Opera', 'pattern': 'OPR' },\n\t      'Chrome',\n\t      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\n\t      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\n\t      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\n\t      { 'label': 'IE', 'pattern': 'IEMobile' },\n\t      { 'label': 'IE', 'pattern': 'MSIE' },\n\t      'Safari'\n\t    ]);\n\t\n\t    /* Detectable products (order is important). */\n\t    var product = getProduct([\n\t      { 'label': 'BlackBerry', 'pattern': 'BB10' },\n\t      'BlackBerry',\n\t      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\n\t      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\n\t      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\n\t      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\n\t      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },\n\t      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },\n\t      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },\n\t      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },\n\t      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },\n\t      'Google TV',\n\t      'Lumia',\n\t      'iPad',\n\t      'iPod',\n\t      'iPhone',\n\t      'Kindle',\n\t      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n\t      'Nexus',\n\t      'Nook',\n\t      'PlayBook',\n\t      'PlayStation Vita',\n\t      'PlayStation',\n\t      'TouchPad',\n\t      'Transformer',\n\t      { 'label': 'Wii U', 'pattern': 'WiiU' },\n\t      'Wii',\n\t      'Xbox One',\n\t      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\n\t      'Xoom'\n\t    ]);\n\t\n\t    /* Detectable manufacturers. */\n\t    var manufacturer = getManufacturer({\n\t      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\n\t      'Archos': {},\n\t      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\n\t      'Asus': { 'Transformer': 1 },\n\t      'Barnes & Noble': { 'Nook': 1 },\n\t      'BlackBerry': { 'PlayBook': 1 },\n\t      'Google': { 'Google TV': 1, 'Nexus': 1 },\n\t      'HP': { 'TouchPad': 1 },\n\t      'HTC': {},\n\t      'LG': {},\n\t      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\n\t      'Motorola': { 'Xoom': 1 },\n\t      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\n\t      'Nokia': { 'Lumia': 1 },\n\t      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\n\t      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 }\n\t    });\n\t\n\t    /* Detectable operating systems (order is important). */\n\t    var os = getOS([\n\t      'Windows Phone',\n\t      'Android',\n\t      'CentOS',\n\t      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\n\t      'Debian',\n\t      'Fedora',\n\t      'FreeBSD',\n\t      'Gentoo',\n\t      'Haiku',\n\t      'Kubuntu',\n\t      'Linux Mint',\n\t      'OpenBSD',\n\t      'Red Hat',\n\t      'SuSE',\n\t      'Ubuntu',\n\t      'Xubuntu',\n\t      'Cygwin',\n\t      'Symbian OS',\n\t      'hpwOS',\n\t      'webOS ',\n\t      'webOS',\n\t      'Tablet OS',\n\t      'Tizen',\n\t      'Linux',\n\t      'Mac OS X',\n\t      'Macintosh',\n\t      'Mac',\n\t      'Windows 98;',\n\t      'Windows '\n\t    ]);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Picks the layout engine from an array of guesses.\n\t     *\n\t     * @private\n\t     * @param {Array} guesses An array of guesses.\n\t     * @returns {null|string} The detected layout engine.\n\t     */\n\t    function getLayout(guesses) {\n\t      return reduce(guesses, function(result, guess) {\n\t        return result || RegExp('\\\\b' + (\n\t          guess.pattern || qualify(guess)\n\t        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Picks the manufacturer from an array of guesses.\n\t     *\n\t     * @private\n\t     * @param {Array} guesses An object of guesses.\n\t     * @returns {null|string} The detected manufacturer.\n\t     */\n\t    function getManufacturer(guesses) {\n\t      return reduce(guesses, function(result, value, key) {\n\t        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n\t        return result || (\n\t          value[product] ||\n\t          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\n\t          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\n\t        ) && key;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Picks the browser name from an array of guesses.\n\t     *\n\t     * @private\n\t     * @param {Array} guesses An array of guesses.\n\t     * @returns {null|string} The detected browser name.\n\t     */\n\t    function getName(guesses) {\n\t      return reduce(guesses, function(result, guess) {\n\t        return result || RegExp('\\\\b' + (\n\t          guess.pattern || qualify(guess)\n\t        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Picks the OS name from an array of guesses.\n\t     *\n\t     * @private\n\t     * @param {Array} guesses An array of guesses.\n\t     * @returns {null|string} The detected OS name.\n\t     */\n\t    function getOS(guesses) {\n\t      return reduce(guesses, function(result, guess) {\n\t        var pattern = guess.pattern || qualify(guess);\n\t        if (!result && (result =\n\t              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\n\t            )) {\n\t          result = cleanupOS(result, pattern, guess.label || guess);\n\t        }\n\t        return result;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Picks the product name from an array of guesses.\n\t     *\n\t     * @private\n\t     * @param {Array} guesses An array of guesses.\n\t     * @returns {null|string} The detected product name.\n\t     */\n\t    function getProduct(guesses) {\n\t      return reduce(guesses, function(result, guess) {\n\t        var pattern = guess.pattern || qualify(guess);\n\t        if (!result && (result =\n\t              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\n\t              RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) ||\n\t              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\n\t            )) {\n\t          // Split by forward slash and append product version if needed.\n\t          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n\t            result[0] += ' ' + result[1];\n\t          }\n\t          // Correct character case and cleanup string.\n\t          guess = guess.label || guess;\n\t          result = format(result[0]\n\t            .replace(RegExp(pattern, 'i'), guess)\n\t            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\n\t            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n\t        }\n\t        return result;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Resolves the version using an array of UA patterns.\n\t     *\n\t     * @private\n\t     * @param {Array} patterns An array of UA patterns.\n\t     * @returns {null|string} The detected version.\n\t     */\n\t    function getVersion(patterns) {\n\t      return reduce(patterns, function(result, pattern) {\n\t        return result || (RegExp(pattern +\n\t          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Returns `platform.description` when the platform object is coerced to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf platform\n\t     * @returns {string} Returns `platform.description` if available, else an empty string.\n\t     */\n\t    function toStringPlatform() {\n\t      return this.description || '';\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Convert layout to an array so we can add extra details.\n\t    layout && (layout = [layout]);\n\t\n\t    // Detect product names that contain their manufacturer's name.\n\t    if (manufacturer && !product) {\n\t      product = getProduct([manufacturer]);\n\t    }\n\t    // Clean up Google TV.\n\t    if ((data = /\\bGoogle TV\\b/.exec(product))) {\n\t      product = data[0];\n\t    }\n\t    // Detect simulators.\n\t    if (/\\bSimulator\\b/i.test(ua)) {\n\t      product = (product ? product + ' ' : '') + 'Simulator';\n\t    }\n\t    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n\t    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n\t      description.push('running in Turbo/Uncompressed mode');\n\t    }\n\t    // Detect IE Mobile 11.\n\t    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n\t      data = parse(ua.replace(/like iPhone OS/, ''));\n\t      manufacturer = data.manufacturer;\n\t      product = data.product;\n\t    }\n\t    // Detect iOS.\n\t    else if (/^iP/.test(product)) {\n\t      name || (name = 'Safari');\n\t      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\n\t        ? ' ' + data[1].replace(/_/g, '.')\n\t        : '');\n\t    }\n\t    // Detect Kubuntu.\n\t    else if (name == 'Konqueror' && !/buntu/i.test(os)) {\n\t      os = 'Kubuntu';\n\t    }\n\t    // Detect Android browsers.\n\t    else if ((manufacturer && manufacturer != 'Google' &&\n\t        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\n\t        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\n\t      name = 'Android Browser';\n\t      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n\t    }\n\t    // Detect Silk desktop/accelerated modes.\n\t    else if (name == 'Silk') {\n\t      if (!/\\bMobi/i.test(ua)) {\n\t        os = 'Android';\n\t        description.unshift('desktop mode');\n\t      }\n\t      if (/Accelerated *= *true/i.test(ua)) {\n\t        description.unshift('accelerated');\n\t      }\n\t    }\n\t    // Detect PaleMoon identifying as Firefox.\n\t    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n\t      description.push('identifying as Firefox ' + data[1]);\n\t    }\n\t    // Detect Firefox OS and products running Firefox.\n\t    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n\t      os || (os = 'Firefox OS');\n\t      product || (product = data[1]);\n\t    }\n\t    // Detect false positives for Firefox/Safari.\n\t    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n\t      // Escape the `/` for Firefox 1.\n\t      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n\t        // Clear name of false positives.\n\t        name = null;\n\t      }\n\t      // Reassign a generic name.\n\t      if ((data = product || manufacturer || os) &&\n\t          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n\t        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n\t      }\n\t    }\n\t    // Add Chrome version to description for Electron.\n\t    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n\t      description.push('Chromium ' + data);\n\t    }\n\t    // Detect non-Opera (Presto-based) versions (order is important).\n\t    if (!version) {\n\t      version = getVersion([\n\t        '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$))',\n\t        'Version',\n\t        qualify(name),\n\t        '(?:Firefox|Minefield|NetFront)'\n\t      ]);\n\t    }\n\t    // Detect stubborn layout engines.\n\t    if ((data =\n\t          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\n\t          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\n\t          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\n\t          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\n\t          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\n\t        )) {\n\t      layout = [data];\n\t    }\n\t    // Detect Windows Phone 7 desktop mode.\n\t    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n\t      name += ' Mobile';\n\t      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n\t      description.unshift('desktop mode');\n\t    }\n\t    // Detect Windows Phone 8.x desktop mode.\n\t    else if (/\\bWPDesktop\\b/i.test(ua)) {\n\t      name = 'IE Mobile';\n\t      os = 'Windows Phone 8.x';\n\t      description.unshift('desktop mode');\n\t      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n\t    }\n\t    // Detect IE 11 identifying as other browsers.\n\t    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n\t      if (name) {\n\t        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n\t      }\n\t      name = 'IE';\n\t      version = data[1];\n\t    }\n\t    // Leverage environment features.\n\t    if (useFeatures) {\n\t      // Detect server-side environments.\n\t      // Rhino has a global function while others have a global object.\n\t      if (isHostType(context, 'global')) {\n\t        if (java) {\n\t          data = java.lang.System;\n\t          arch = data.getProperty('os.arch');\n\t          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n\t        }\n\t        if (isModuleScope && isHostType(context, 'system') && (data = [context.system])[0]) {\n\t          os || (os = data[0].os || null);\n\t          try {\n\t            data[1] = context.require('ringo/engine').version;\n\t            version = data[1].join('.');\n\t            name = 'RingoJS';\n\t          } catch(e) {\n\t            if (data[0].global.system == context.system) {\n\t              name = 'Narwhal';\n\t            }\n\t          }\n\t        }\n\t        else if (\n\t          typeof context.process == 'object' && !context.process.browser &&\n\t          (data = context.process)\n\t        ) {\n\t          if (typeof data.versions == 'object') {\n\t            if (typeof data.versions.electron == 'string') {\n\t              description.push('Node ' + data.versions.node);\n\t              name = 'Electron';\n\t              version = data.versions.electron;\n\t            } else if (typeof data.versions.nw == 'string') {\n\t              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n\t              name = 'NW.js';\n\t              version = data.versions.nw;\n\t            }\n\t          } else {\n\t            name = 'Node.js';\n\t            arch = data.arch;\n\t            os = data.platform;\n\t            version = /[\\d.]+/.exec(data.version)\n\t            version = version ? version[0] : 'unknown';\n\t          }\n\t        }\n\t        else if (rhino) {\n\t          name = 'Rhino';\n\t        }\n\t      }\n\t      // Detect Adobe AIR.\n\t      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\n\t        name = 'Adobe AIR';\n\t        os = data.flash.system.Capabilities.os;\n\t      }\n\t      // Detect PhantomJS.\n\t      else if (getClassOf((data = context.phantom)) == phantomClass) {\n\t        name = 'PhantomJS';\n\t        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\n\t      }\n\t      // Detect IE compatibility modes.\n\t      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n\t        // We're in compatibility mode when the Trident version + 4 doesn't\n\t        // equal the document mode.\n\t        version = [version, doc.documentMode];\n\t        if ((data = +data[1] + 4) != version[1]) {\n\t          description.push('IE ' + version[1] + ' mode');\n\t          layout && (layout[1] = '');\n\t          version[1] = data;\n\t        }\n\t        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n\t      }\n\t      // Detect IE 11 masking as other browsers.\n\t      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n\t        description.push('masking as ' + name + ' ' + version);\n\t        name = 'IE';\n\t        version = '11.0';\n\t        layout = ['Trident'];\n\t        os = 'Windows';\n\t      }\n\t      os = os && format(os);\n\t    }\n\t    // Detect prerelease phases.\n\t    if (version && (data =\n\t          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\n\t          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\n\t          /\\bMinefield\\b/i.test(ua) && 'a'\n\t        )) {\n\t      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n\t      version = version.replace(RegExp(data + '\\\\+?$'), '') +\n\t        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n\t    }\n\t    // Detect Firefox Mobile.\n\t    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\n\t      name = 'Firefox Mobile';\n\t    }\n\t    // Obscure Maxthon's unreliable version.\n\t    else if (name == 'Maxthon' && version) {\n\t      version = version.replace(/\\.[\\d.]+/, '.x');\n\t    }\n\t    // Detect Xbox 360 and Xbox One.\n\t    else if (/\\bXbox\\b/i.test(product)) {\n\t      if (product == 'Xbox 360') {\n\t        os = null;\n\t      }\n\t      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n\t        description.unshift('mobile mode');\n\t      }\n\t    }\n\t    // Add mobile postfix.\n\t    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\n\t        (os == 'Windows CE' || /Mobi/i.test(ua))) {\n\t      name += ' Mobile';\n\t    }\n\t    // Detect IE platform preview.\n\t    else if (name == 'IE' && useFeatures) {\n\t      try {\n\t        if (context.external === null) {\n\t          description.unshift('platform preview');\n\t        }\n\t      } catch(e) {\n\t        description.unshift('embedded');\n\t      }\n\t    }\n\t    // Detect BlackBerry OS version.\n\t    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n\t    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\n\t          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\n\t          version\n\t        )) {\n\t      data = [data, /BB10/.test(ua)];\n\t      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n\t      version = null;\n\t    }\n\t    // Detect Opera identifying/masking itself as another browser.\n\t    // http://www.opera.com/support/kb/view/843/\n\t    else if (this != forOwn && product != 'Wii' && (\n\t          (useFeatures && opera) ||\n\t          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\n\t          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\n\t          (name == 'IE' && (\n\t            (os && !/^Win/.test(os) && version > 5.5) ||\n\t            /\\bWindows XP\\b/.test(os) && version > 8 ||\n\t            version == 8 && !/\\bTrident\\b/.test(ua)\n\t          ))\n\t        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\n\t      // When \"identifying\", the UA contains both Opera and the other browser's name.\n\t      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n\t      if (reOpera.test(name)) {\n\t        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n\t          os = null;\n\t        }\n\t        data = 'identify' + data;\n\t      }\n\t      // When \"masking\", the UA contains only the other browser's name.\n\t      else {\n\t        data = 'mask' + data;\n\t        if (operaClass) {\n\t          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n\t        } else {\n\t          name = 'Opera';\n\t        }\n\t        if (/\\bIE\\b/.test(data)) {\n\t          os = null;\n\t        }\n\t        if (!useFeatures) {\n\t          version = null;\n\t        }\n\t      }\n\t      layout = ['Presto'];\n\t      description.push(data);\n\t    }\n\t    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n\t    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n\t      // Correct build number for numeric comparison.\n\t      // (e.g. \"532.5\" becomes \"532.05\")\n\t      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n\t      // Nightly builds are postfixed with a \"+\".\n\t      if (name == 'Safari' && data[1].slice(-1) == '+') {\n\t        name = 'WebKit Nightly';\n\t        prerelease = 'alpha';\n\t        version = data[1].slice(0, -1);\n\t      }\n\t      // Clear incorrect browser versions.\n\t      else if (version == data[1] ||\n\t          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n\t        version = null;\n\t      }\n\t      // Use the full Chrome version when available.\n\t      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n\t      // Detect Blink layout engine.\n\t      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n\t        layout = ['Blink'];\n\t      }\n\t      // Detect JavaScriptCore.\n\t      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n\t      if (!useFeatures || (!likeChrome && !data[1])) {\n\t        layout && (layout[1] = 'like Safari');\n\t        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\n\t      } else {\n\t        layout && (layout[1] = 'like Chrome');\n\t        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n\t      }\n\t      // Add the postfix of \".x\" or \"+\" for approximate versions.\n\t      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n\t      // Obscure version for some Safari 1-2 releases.\n\t      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n\t        version = data;\n\t      }\n\t    }\n\t    // Detect Opera desktop modes.\n\t    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\n\t      name += ' ';\n\t      description.unshift('desktop mode');\n\t      if (data == 'zvav') {\n\t        name += 'Mini';\n\t        version = null;\n\t      } else {\n\t        name += 'Mobile';\n\t      }\n\t      os = os.replace(RegExp(' *' + data + '$'), '');\n\t    }\n\t    // Detect Chrome desktop mode.\n\t    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n\t      description.unshift('desktop mode');\n\t      name = 'Chrome Mobile';\n\t      version = null;\n\t\n\t      if (/\\bOS X\\b/.test(os)) {\n\t        manufacturer = 'Apple';\n\t        os = 'iOS 4.3+';\n\t      } else {\n\t        os = null;\n\t      }\n\t    }\n\t    // Strip incorrect OS versions.\n\t    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\n\t        ua.indexOf('/' + data + '-') > -1) {\n\t      os = trim(os.replace(data, ''));\n\t    }\n\t    // Add layout engine.\n\t    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\n\t        /Browser|Lunascape|Maxthon/.test(name) ||\n\t        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\n\t        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(name) && layout[1])) {\n\t      // Don't add layout details to description if they are falsey.\n\t      (data = layout[layout.length - 1]) && description.push(data);\n\t    }\n\t    // Combine contextual information.\n\t    if (description.length) {\n\t      description = ['(' + description.join('; ') + ')'];\n\t    }\n\t    // Append manufacturer to description.\n\t    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n\t      description.push('on ' + manufacturer);\n\t    }\n\t    // Append product to description.\n\t    if (product) {\n\t      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n\t    }\n\t    // Parse the OS into an object.\n\t    if (os) {\n\t      data = / ([\\d.+]+)$/.exec(os);\n\t      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n\t      os = {\n\t        'architecture': 32,\n\t        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\n\t        'version': data ? data[1] : null,\n\t        'toString': function() {\n\t          var version = this.version;\n\t          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n\t        }\n\t      };\n\t    }\n\t    // Add browser/OS architecture.\n\t    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n\t      if (os) {\n\t        os.architecture = 64;\n\t        os.family = os.family.replace(RegExp(' *' + data), '');\n\t      }\n\t      if (\n\t          name && (/\\bWOW64\\b/i.test(ua) ||\n\t          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\n\t      ) {\n\t        description.unshift('32-bit');\n\t      }\n\t    }\n\t    // Chrome 39 and above on OS X is always 64-bit.\n\t    else if (\n\t        os && /^OS X/.test(os.family) &&\n\t        name == 'Chrome' && parseFloat(version) >= 39\n\t    ) {\n\t      os.architecture = 64;\n\t    }\n\t\n\t    ua || (ua = null);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The platform object.\n\t     *\n\t     * @name platform\n\t     * @type Object\n\t     */\n\t    var platform = {};\n\t\n\t    /**\n\t     * The platform description.\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.description = ua;\n\t\n\t    /**\n\t     * The name of the browser's layout engine.\n\t     *\n\t     * The list of common layout engines include:\n\t     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.layout = layout && layout[0];\n\t\n\t    /**\n\t     * The name of the product's manufacturer.\n\t     *\n\t     * The list of manufacturers include:\n\t     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n\t     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n\t     * \"Nokia\", \"Samsung\" and \"Sony\"\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.manufacturer = manufacturer;\n\t\n\t    /**\n\t     * The name of the browser/environment.\n\t     *\n\t     * The list of common browser names include:\n\t     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n\t     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n\t     * \"Opera Mini\" and \"Opera\"\n\t     *\n\t     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n\t     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.name = name;\n\t\n\t    /**\n\t     * The alpha/beta release indicator.\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.prerelease = prerelease;\n\t\n\t    /**\n\t     * The name of the product hosting the browser.\n\t     *\n\t     * The list of common products include:\n\t     *\n\t     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n\t     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.product = product;\n\t\n\t    /**\n\t     * The browser's user agent string.\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.ua = ua;\n\t\n\t    /**\n\t     * The browser/environment version.\n\t     *\n\t     * @memberOf platform\n\t     * @type string|null\n\t     */\n\t    platform.version = name && version;\n\t\n\t    /**\n\t     * The name of the operating system.\n\t     *\n\t     * @memberOf platform\n\t     * @type Object\n\t     */\n\t    platform.os = os || {\n\t\n\t      /**\n\t       * The CPU architecture the OS is built for.\n\t       *\n\t       * @memberOf platform.os\n\t       * @type number|null\n\t       */\n\t      'architecture': null,\n\t\n\t      /**\n\t       * The family of the OS.\n\t       *\n\t       * Common values include:\n\t       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n\t       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\n\t       * \"Android\", \"iOS\" and \"Windows Phone\"\n\t       *\n\t       * @memberOf platform.os\n\t       * @type string|null\n\t       */\n\t      'family': null,\n\t\n\t      /**\n\t       * The version of the OS.\n\t       *\n\t       * @memberOf platform.os\n\t       * @type string|null\n\t       */\n\t      'version': null,\n\t\n\t      /**\n\t       * Returns the OS string.\n\t       *\n\t       * @memberOf platform.os\n\t       * @returns {string} The OS string.\n\t       */\n\t      'toString': function() { return 'null'; }\n\t    };\n\t\n\t    platform.parse = parse;\n\t    platform.toString = toStringPlatform;\n\t\n\t    if (platform.version) {\n\t      description.unshift(version);\n\t    }\n\t    if (platform.name) {\n\t      description.unshift(name);\n\t    }\n\t    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n\t      description.push(product ? '(' + os + ')' : 'on ' + os);\n\t    }\n\t    if (description.length) {\n\t      platform.description = description.join(' ');\n\t    }\n\t    return platform;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export platform.\n\t  var platform = parse();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose platform on the global object to prevent errors when platform is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    root.platform = platform;\n\t\n\t    // Define as an anonymous module so platform can be aliased through path mapping.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return platform;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for CommonJS support.\n\t    forOwn(platform, function(value, key) {\n\t      freeExports[key] = value;\n\t    });\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root.platform = platform;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module), (function() { return this; }())))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// detector.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bfe0aa61ec66765bf406","import Detector from './Detector';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get DetectorJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('DetectorJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  let detector;\n\n  if(!window.detector) {\n    detector = new Detector();\n    window.detector = detector;\n  } else {\n    detector = window.detector;\n  }\n\n  return detector;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 1\n// module chunks = 0","import platform from 'platform';\nimport feature from 'feature-js';\nimport bowser from 'bowser';\nimport Æ’ from 'flavor-js';\n\nconst navigator = window.navigator;\nconst ua = navigator.userAgent;\n\nexport default class Detector {\n  constructor() {\n    this.platform = this.getPlatform();\n    this.os = this.getOS();\n    this.browser = this.getBrowser();\n    this.features = this.getFeatures();\n    this.audio = this.getAudio();\n  }\n\n  getPlatform() {\n    const p = {};\n\n    try {\n      // see https://github.com/bestiejs/platform.js/blob/master/doc/README.md#readme\n      p.inherit({\n        description: platform.description,\n        manufacturer: platform.manufacturer, // eg. 'Apple', 'Archos', 'Amazon', 'Asus', 'Barnes & Noble', 'BlackBerry', 'Google', 'HP', 'HTC', 'LG', 'Microsoft', 'Motorola', 'Nintendo', 'Nokia', 'Samsung' and 'Sony'\n        desktop: !bowser.mobile && !bowser.tablet,\n        phone: bowser.mobile,\n        tablet: bowser.tablet,\n        // desktop: false,\n        // pc: false,\n        // mac: false,\n        // iPhone: false,\n        // iPad: false,\n      });\n    } catch (e) {\n      throw e;\n    }\n\n    return p;\n  }\n\n  getOS() {\n    const o = {};\n\n    try {\n      o.inherit({\n        architecture: platform.os.architecture === 32 ? 'x86' : 'x64',\n        name: platform.os.family,\n        version: platform.os.version || bowser.osversion,\n        android: bowser.android && platform.os.family === 'Android',\n        bada: bowser.bada,\n        blackberry: bowser.blackberry,\n        chromeOS: bowser.chromeos,\n        firefoxOS: bowser.firefoxos,\n        iOS: bowser.ios && platform.os.family === 'iOS',\n        linux: bowser.linux && ['Ubuntu', 'Debian', 'Fedora', 'Red Hat', 'SuSE'].contains(platform.os.family),\n        macOS: /Mac OS/.test(ua) && bowser.mac && ['OS X', 'macOS'].contains(platform.os.family),\n        sailfish: bowser.sailfish,\n        tizen: bowser.tizen,\n        windows: bowser.windows && ['Windows', 'Windows Server 2008 R2 / 7', 'Windows Server 2008 / Vista', 'Windows XP'].contains(platform.os.family),\n        windowsPhone: bowser.windowsphone && platform.os.family === 'Windows Phone',\n      });\n    } catch (e) {\n      throw e;\n    }\n\n    return o;\n  }\n\n  getBrowser() {\n    const b = {};\n\n    try {\n      b.inherit({\n        name: bowser.name || platform.name,\n        version: bowser.version,\n        // WebApp mode in iOS\n        webApp: navigator.standalone,\n        engine: {\n          blink: bowser.blink && platform.layout === 'Blink',\n          gecko: bowser.gecko && platform.layout === 'Gecko',\n          trident: bowser.msie && platform.layout === 'Trident',\n          edgeHTML: bowser.msedge && platform.layout === 'EdgeHTML',\n          webkit: bowser.webkit && platform.layout === 'WebKit',\n        },\n        android: bowser.android, // native android browser\n        arora: /Arora/.test(ua),\n        bada: bowser.bada, // native bada browser\n        blackberry: bowser.blackberry, // native blackberry browser\n        chrome: bowser.chrome && platform.name.contains('Chrome'),\n        chromeMobile: bowser.chrome && bowser.mobile && platform.name === 'Chrome Modile',\n        cocoonJS: navigator.isCocoonJS,\n        edge: bowser.msedge && platform.name === 'Microsoft Edge',\n        ejecta: typeof window.ejecta !== 'undefined',\n        electron: platform.name === 'Electron',\n        epiphany: /Epiphany/.test(ua),\n        firefox: bowser.firefox && platform.name.contains('Firefox'),\n        firefoxMobile: bowser.firefox && ['Firefox for iOS', 'Firefox Mobile'].contains(platform.name),\n        ie: bowser.msie && platform.name.contains('IE'),\n        ieMobile: bowser.msie && bowser.mobile && platform.name === 'IE Mobile',\n        midori: /Midori/.test(ua),\n        opera: bowser.opera && platform.name.contains('Opera'),\n        operaMobile: bowser.opera && bowser.mobile && ['Opera Mini', 'Opera Mobile'].contains(platform.name),\n        phantom: bowser.phantom && platform.name === 'PhantomJS',\n        safari: bowser.safari && platform.name.contains('Safari'),\n        safariMobile: /Mobile Safari/.test(ua) && bowser.safari && bowser.ios && bowser.mobile && platform.name.contains('Safari'),\n        sailfish: bowser.sailfish,\n        seamonkey: bowser.seamonkey && platform.name === 'SeaMonkey',\n        samsung: bowser.samsungBrowser, // native samsung browser\n        silk: bowser.silk && platform.name === 'Silk', // native amazon kindle browser\n        tizen: bowser.tizen, //- native browser\n        webOS: bowser.webos, //- native browser\n      });\n    } catch (e) {\n      throw e;\n    }\n\n    return b;\n  }\n\n  getAudio() {\n    const a = {\n      audioData: !!(window.Audio),\n      webAudio: !!(window.webkitAudioContext || window.AudioContext),\n    };\n\n    try {\n      const audioElement = document.createElement('audio');\n\n      if (!!audioElement.canPlayType) {\n        a.inherit({\n          ogg: audioElement.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n          opus: audioElement.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n          mp3: audioElement.canPlayType('audio/mpeg;').replace(/^no$/, ''),\n          // Mimetypes accepted:\n          //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n          //   bit.ly/iphoneoscodecs\n          wav: audioElement.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n          m4a: audioElement.canPlayType('audio/x-m4a;').replace(/^no$/, '') || audioElement.canPlayType('audio/aac;').replace(/^no$/, ''),\n          webm: audioElement.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        });\n      }\n    } catch (e) {\n      throw e;\n    }\n\n    return a;\n  }\n\n  checkFeature(f) {\n    let el = null;\n\n    try {\n      if (f === 'css3d') {\n        el = document.createElement('p');\n        let hasCSS3D = false;\n\n        // Add it to the body to get the computed style.\n        document.body.insertBefore(el, null);\n\n        ['-webkit-transform', '-o-transform', '-ms-transform', '-moz-transform', 'transform'].each((t) => {\n          if (!!el.style[t]) {\n            el.style[t] = 'translate3d(1px,1px,1px)';\n            hasCSS3D = window.getComputedStyle(el).getPropertyValue(t);\n          }\n        });\n\n        document.body.removeChild(el);\n\n        return (!!hasCSS3D && hasCSS3D.length > 0 && hasCSS3D !== 'none');\n      } else if (f === 'fullscreen') {\n        el = document.createElement('canvas');\n        return !!el.requestFullscreen || !!el.webkitRequestFullscreen || !!el.msRequestFullscreen || !!el.mozRequestFullScreen;\n      } else if (f === 'webGL') {\n        el = document.createElement('canvas');\n        return !!window.WebGLRenderingContext && (el.getContext('webgl') || el.getContext('experimental-webgl'));\n      }\n    } catch (error) {\n      return false;\n    }\n\n    return false;\n  }\n\n  getFeatures() {\n    const f = {};\n\n    try {\n      navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;\n\n      f.inherit({\n        async: feature.async,\n        addEventListener: feature.addEventListener,\n        canvas: feature.canvas,\n        classList: feature.classList,\n        cors: feature.cors,\n        contextMenu: feature.contextMenu,\n        css3D: this.checkFeature('css3d') && feature.css3Dtransform,\n        cssTransform: feature.cssTransform,\n        cssTransition: feature.cssTransition,\n        defer: feature.defer,\n        file: !!window.File && !!window.FileReader && !!window.FileList && !!window.Blob,\n        fileSystem: !!window.requestFileSystem,\n        fullscreen: this.checkFeature('fullscreen'),\n        // fullscreenKeyboard: window.Element && Element['ALLOW_KEYBOARD_INPUT'],\n        geolocation: feature.geolocation,\n        getUserMedia: !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia),\n        historyAPI: feature.historyAPI,\n        littleEndian: (typeof Int8Array !== 'undefined') && new Int8Array(new Int16Array([1]).buffer)[0] > 0,\n        localStorage: feature.localStorage,\n        matchMedia: feature.matchMedia,\n        motion: feature.deviceMotion,\n        mspointer: window.navigator.msPointerEnabled || window.navigator.pointerEnabled,\n        orientation: feature.deviceOrientation,\n        pictureElement: feature.pictureElement,\n        pixelRatio: window.devicePixelRatio || 1,\n        placeholder: feature.placeholder,\n        pointerLock: 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document,\n        querySelectorAll: feature.querySelectorAll,\n        quirksMode: !(document.compatMode === 'CSS1Compat'),\n        remUnit: feature.remUnit,\n        serviceWorker: feature.serviceWorker,\n        sizes: feature.sizes,\n        srcset: feature.srcset,\n        svg: feature.svg,\n        touch: ('ontouchstart' in document.documentElement || (window.navigator.maxTouchPoints && window.navigator.maxTouchPoints > 1)) && feature.touch,\n        typedArray: (typeof Int8Array !== 'undefined'),\n        vibration: navigator.vibrate,\n        viewportUnit: feature.viewportUnit,\n        webGL: this.checkFeature('webGL') && feature.webGL,\n        worker: !!window.Worker,\n      });\n    } catch (e) {\n      throw e;\n    }\n\n    return f;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Detector.js","/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else root[name] = definition()\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)os/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/chrome.+? edge/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && !result.msedge && (android || result.silk)) {\n      result.android = t\n    } else if (!result.windowsphone && !result.msedge && iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n    } else if (mac) {\n      result.mac = t\n    } else if (xbox) {\n      result.xbox = t\n    } else if (windows) {\n      result.windows = t\n    } else if (linux) {\n      result.linux = t\n    }\n\n    function getWindowsVersion (s) {\n      switch (s) {\n        case 'NT': return 'NT'\n        case 'XP': return 'XP'\n        case 'NT 5.0': return '2000'\n        case 'NT 5.1': return 'XP'\n        case 'NT 5.2': return '2003'\n        case 'NT 6.0': return 'Vista'\n        case 'NT 6.1': return '7'\n        case 'NT 6.2': return '8'\n        case 'NT 6.3': return '8.1'\n        case 'NT 10.0': return '10'\n        default: return undefined\n      }\n    }\n    \n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  return bowser\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/bowser/src/bowser.js\n// module id = 3\n// module chunks = 0","/*! FeatureJS 0.0.1, (thanks to http://featurejs.com) */\n!function(e,t,n){\"use strict\";var r=t.documentElement,i={create:function(e){return t.createElement(e)},old:!!/(Android\\s(1.|2.))|(Silk\\/1.)/i.test(navigator.userAgent),pfx:function(){var e=t.createElement(\"dummy\").style,r=[\"Webkit\",\"Moz\",\"O\",\"ms\"],i={};return function(t){if(\"undefined\"==typeof i[t]){var o=t.charAt(0).toUpperCase()+t.substr(1),a=(t+\" \"+r.join(o+\" \")+o).split(\" \");i[t]=null;for(var c in a)if(e[a[c]]!==n){i[t]=a[c];break}}return i[t]}}()},o={css3Dtransform:function(){var e=!i.old&&null!==i.pfx(\"perspective\");return!!e}(),cssTransform:function(){var e=!i.old&&null!==i.pfx(\"transformOrigin\");return!!e}(),cssTransition:function(){var e=null!==i.pfx(\"transition\");return!!e}(),addEventListener:!!e.addEventListener,querySelectorAll:!!t.querySelectorAll,matchMedia:!!e.matchMedia,deviceMotion:\"DeviceMotionEvent\"in e,deviceOrientation:\"DeviceOrientationEvent\"in e,contextMenu:\"contextMenu\"in r&&\"HTMLMenuItemElement\"in e,classList:\"classList\"in r,placeholder:\"placeholder\"in i.create(\"input\"),localStorage:function(){var e=\"x\";try{return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(t){return!1}}(),historyAPI:e.history&&\"pushState\"in e.history,serviceWorker:\"serviceWorker\"in navigator,viewportUnit:function(e){try{e.style.width=\"1vw\";var t=\"\"!==e.style.width;return!!t}catch(n){return!1}}(i.create(\"dummy\")),remUnit:function(e){try{e.style.width=\"1rem\";var t=\"\"!==e.style.width;return!!t}catch(n){return!1}}(i.create(\"dummy\")),canvas:function(e){return!(!e.getContext||!e.getContext(\"2d\"))}(i.create(\"canvas\")),svg:!!t.createElementNS&&!!t.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\").createSVGRect,webGL:function(t){try{return!(!e.WebGLRenderingContext||!t.getContext(\"webgl\")&&!t.getContext(\"experimental-webgl\"))}catch(n){return!1}}(i.create(\"canvas\")),cors:\"XMLHttpRequest\"in e&&\"withCredentials\"in new XMLHttpRequest,touch:!!(\"ontouchstart\"in e||e.navigator&&e.navigator.msPointerEnabled&&e.MSGesture||e.DocumentTouch&&t instanceof DocumentTouch),async:\"async\"in i.create(\"script\"),defer:\"defer\"in i.create(\"script\"),geolocation:\"geolocation\"in navigator,srcset:\"srcset\"in i.create(\"img\"),sizes:\"sizes\"in i.create(\"img\"),pictureElement:\"HTMLPictureElement\"in e,testAll:function(){var e=\" js\";for(var t in this)\"testAll\"!==t&&\"constructor\"!==t&&this[t]&&(e+=\" \"+t);r.className+=e.toLowerCase()}};e.feature=o}(window,document),module.exports=window.feature;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/feature-js/feature.min.js\n// module id = 4\n// module chunks = 0","/*!\n * Platform.js <https://mths.be/platform>\n * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object. */\n  var oldRoot = root;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  /** Regular expression to detect Opera. */\n  var reOpera = /\\bOpera/;\n\n  /** Possible global object. */\n  var thisBinding = this;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check for own properties of an object. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to resolve the internal `[[Class]]` of values. */\n  var toString = objectProto.toString;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4':  '10 Technical Preview',\n      '6.3':  '8.1',\n      '6.2':  '8',\n      '6.1':  'Server 2008 R2 / 7',\n      '6.0':  'Server 2008 / Vista',\n      '5.2':  'Server 2003 / XP 64-bit',\n      '5.1':  'XP',\n      '5.01': '2000 SP1',\n      '5.0':  '2000',\n      '4.0':  'NT',\n      '4.90': 'ME'\n    };\n    // Detect Windows version from platform tokens.\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\n        (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    }\n    // Correct character case and cleanup string.\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(\n      os.replace(/ ce$/i, ' CE')\n        .replace(/\\bhpw/i, 'web')\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\n        .replace(/_PowerPC\\b/i, ' OS')\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\n        .replace(/\\bMac (OS X)\\b/, '$1')\n        .replace(/\\/(\\d)/, ' $1')\n        .replace(/_/g, '.')\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\n        .split(' on ')[0]\n    );\n\n    return os;\n  }\n\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string)\n      ? string\n      : capitalize(string);\n  }\n\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n  function getClassOf(value) {\n    return value == null\n      ? capitalize(value)\n      : toString.call(value).slice(8, -1);\n  }\n\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\n      (type == 'object' ? !!object[property] : true);\n  }\n\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function(value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n  function parse(ua) {\n\n    /** The environment context object. */\n    var context = root;\n\n    /** Used to flag when a custom context is provided. */\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\n    // Juggle arguments.\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n\n    /** Browser navigator object. */\n    var nav = context.navigator || {};\n\n    /** Browser user agent string. */\n    var userAgent = nav.userAgent || '';\n\n    ua || (ua = userAgent);\n\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\n    /** Used to detect if browser is like Chrome. */\n    var likeChrome = isCustomContext\n      ? !!nav.likeChrome\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\n    /** Internal `[[Class]]` value shortcuts. */\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\n    /** Detect Java environments. */\n    var java = /\\bJava/.test(javaClass) && context.java;\n\n    /** Detect Rhino. */\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n\n    /** A character to represent alpha. */\n    var alpha = java ? 'a' : '\\u03b1';\n\n    /** A character to represent beta. */\n    var beta = java ? 'b' : '\\u03b2';\n\n    /** Browser document object. */\n    var doc = context.document || {};\n\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n    var opera = context.operamini || context.opera;\n\n    /** Opera `[[Class]]`. */\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\n      ? operaClass\n      : (opera = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n    var data;\n\n    /** The CPU architecture. */\n    var arch = ua;\n\n    /** Platform description array. */\n    var description = [];\n\n    /** Platform alpha/beta indicator. */\n    var prerelease = null;\n\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n    var useFeatures = ua == userAgent;\n\n    /** The browser/environment version. */\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n    var isSpecialCasedOS;\n\n    /* Detectable layout engines (order is important). */\n    var layout = getLayout([\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\n      'Trident',\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\n      'iCab',\n      'Presto',\n      'NetFront',\n      'Tasman',\n      'KHTML',\n      'Gecko'\n    ]);\n\n    /* Detectable browser names (order is important). */\n    var name = getName([\n      'Adobe AIR',\n      'Arora',\n      'Avant Browser',\n      'Breach',\n      'Camino',\n      'Electron',\n      'Epiphany',\n      'Fennec',\n      'Flock',\n      'Galeon',\n      'GreenBrowser',\n      'iCab',\n      'Iceweasel',\n      'K-Meleon',\n      'Konqueror',\n      'Lunascape',\n      'Maxthon',\n      { 'label': 'Microsoft Edge', 'pattern': 'Edge' },\n      'Midori',\n      'Nook Browser',\n      'PaleMoon',\n      'PhantomJS',\n      'Raven',\n      'Rekonq',\n      'RockMelt',\n      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },\n      'SeaMonkey',\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Sleipnir',\n      'SlimBrowser',\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\n      'Sunrise',\n      'Swiftfox',\n      'Waterfox',\n      'WebPositive',\n      'Opera Mini',\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\n      'Opera',\n      { 'label': 'Opera', 'pattern': 'OPR' },\n      'Chrome',\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\n      { 'label': 'IE', 'pattern': 'IEMobile' },\n      { 'label': 'IE', 'pattern': 'MSIE' },\n      'Safari'\n    ]);\n\n    /* Detectable products (order is important). */\n    var product = getProduct([\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\n      'BlackBerry',\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\n      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },\n      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },\n      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },\n      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },\n      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },\n      'Google TV',\n      'Lumia',\n      'iPad',\n      'iPod',\n      'iPhone',\n      'Kindle',\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Nexus',\n      'Nook',\n      'PlayBook',\n      'PlayStation Vita',\n      'PlayStation',\n      'TouchPad',\n      'Transformer',\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\n      'Wii',\n      'Xbox One',\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\n      'Xoom'\n    ]);\n\n    /* Detectable manufacturers. */\n    var manufacturer = getManufacturer({\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\n      'Archos': {},\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\n      'Asus': { 'Transformer': 1 },\n      'Barnes & Noble': { 'Nook': 1 },\n      'BlackBerry': { 'PlayBook': 1 },\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\n      'HP': { 'TouchPad': 1 },\n      'HTC': {},\n      'LG': {},\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\n      'Motorola': { 'Xoom': 1 },\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\n      'Nokia': { 'Lumia': 1 },\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\n      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 }\n    });\n\n    /* Detectable operating systems (order is important). */\n    var os = getOS([\n      'Windows Phone',\n      'Android',\n      'CentOS',\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\n      'Debian',\n      'Fedora',\n      'FreeBSD',\n      'Gentoo',\n      'Haiku',\n      'Kubuntu',\n      'Linux Mint',\n      'OpenBSD',\n      'Red Hat',\n      'SuSE',\n      'Ubuntu',\n      'Xubuntu',\n      'Cygwin',\n      'Symbian OS',\n      'hpwOS',\n      'webOS ',\n      'webOS',\n      'Tablet OS',\n      'Tizen',\n      'Linux',\n      'Mac OS X',\n      'Macintosh',\n      'Mac',\n      'Windows 98;',\n      'Windows '\n    ]);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n    function getLayout(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n    function getManufacturer(guesses) {\n      return reduce(guesses, function(result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (\n          value[product] ||\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\n        ) && key;\n      });\n    }\n\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n    function getName(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n    function getOS(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\n            )) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n    function getProduct(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\n            )) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          }\n          // Correct character case and cleanup string.\n          guess = guess.label || guess;\n          result = format(result[0]\n            .replace(RegExp(pattern, 'i'), guess)\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n    function getVersion(patterns) {\n      return reduce(patterns, function(result, pattern) {\n        return result || (RegExp(pattern +\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n    function toStringPlatform() {\n      return this.description || '';\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Convert layout to an array so we can add extra details.\n    layout && (layout = [layout]);\n\n    // Detect product names that contain their manufacturer's name.\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    }\n    // Clean up Google TV.\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\n      product = data[0];\n    }\n    // Detect simulators.\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    }\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    }\n    // Detect IE Mobile 11.\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    }\n    // Detect iOS.\n    else if (/^iP/.test(product)) {\n      name || (name = 'Safari');\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\n        ? ' ' + data[1].replace(/_/g, '.')\n        : '');\n    }\n    // Detect Kubuntu.\n    else if (name == 'Konqueror' && !/buntu/i.test(os)) {\n      os = 'Kubuntu';\n    }\n    // Detect Android browsers.\n    else if ((manufacturer && manufacturer != 'Google' &&\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\n      name = 'Android Browser';\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n    }\n    // Detect Silk desktop/accelerated modes.\n    else if (name == 'Silk') {\n      if (!/\\bMobi/i.test(ua)) {\n        os = 'Android';\n        description.unshift('desktop mode');\n      }\n      if (/Accelerated *= *true/i.test(ua)) {\n        description.unshift('accelerated');\n      }\n    }\n    // Detect PaleMoon identifying as Firefox.\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n      description.push('identifying as Firefox ' + data[1]);\n    }\n    // Detect Firefox OS and products running Firefox.\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n      os || (os = 'Firefox OS');\n      product || (product = data[1]);\n    }\n    // Detect false positives for Firefox/Safari.\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n      // Escape the `/` for Firefox 1.\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n        // Clear name of false positives.\n        name = null;\n      }\n      // Reassign a generic name.\n      if ((data = product || manufacturer || os) &&\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n      }\n    }\n    // Add Chrome version to description for Electron.\n    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n      description.push('Chromium ' + data);\n    }\n    // Detect non-Opera (Presto-based) versions (order is important).\n    if (!version) {\n      version = getVersion([\n        '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$))',\n        'Version',\n        qualify(name),\n        '(?:Firefox|Minefield|NetFront)'\n      ]);\n    }\n    // Detect stubborn layout engines.\n    if ((data =\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\n        )) {\n      layout = [data];\n    }\n    // Detect Windows Phone 7 desktop mode.\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    }\n    // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n      name = 'IE Mobile';\n      os = 'Windows Phone 8.x';\n      description.unshift('desktop mode');\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n    }\n    // Detect IE 11 identifying as other browsers.\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n      if (name) {\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n      }\n      name = 'IE';\n      version = data[1];\n    }\n    // Leverage environment features.\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n        if (isModuleScope && isHostType(context, 'system') && (data = [context.system])[0]) {\n          os || (os = data[0].os || null);\n          try {\n            data[1] = context.require('ringo/engine').version;\n            version = data[1].join('.');\n            name = 'RingoJS';\n          } catch(e) {\n            if (data[0].global.system == context.system) {\n              name = 'Narwhal';\n            }\n          }\n        }\n        else if (\n          typeof context.process == 'object' && !context.process.browser &&\n          (data = context.process)\n        ) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          } else {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version)\n            version = version ? version[0] : 'unknown';\n          }\n        }\n        else if (rhino) {\n          name = 'Rhino';\n        }\n      }\n      // Detect Adobe AIR.\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\n        name = 'Adobe AIR';\n        os = data.flash.system.Capabilities.os;\n      }\n      // Detect PhantomJS.\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\n        name = 'PhantomJS';\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\n      }\n      // Detect IE compatibility modes.\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n        // We're in compatibility mode when the Trident version + 4 doesn't\n        // equal the document mode.\n        version = [version, doc.documentMode];\n        if ((data = +data[1] + 4) != version[1]) {\n          description.push('IE ' + version[1] + ' mode');\n          layout && (layout[1] = '');\n          version[1] = data;\n        }\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n      }\n      // Detect IE 11 masking as other browsers.\n      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n        description.push('masking as ' + name + ' ' + version);\n        name = 'IE';\n        version = '11.0';\n        layout = ['Trident'];\n        os = 'Windows';\n      }\n      os = os && format(os);\n    }\n    // Detect prerelease phases.\n    if (version && (data =\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\n          /\\bMinefield\\b/i.test(ua) && 'a'\n        )) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    }\n    // Detect Firefox Mobile.\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    }\n    // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n      version = version.replace(/\\.[\\d.]+/, '.x');\n    }\n    // Detect Xbox 360 and Xbox One.\n    else if (/\\bXbox\\b/i.test(product)) {\n      if (product == 'Xbox 360') {\n        os = null;\n      }\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n        description.unshift('mobile mode');\n      }\n    }\n    // Add mobile postfix.\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\n      name += ' Mobile';\n    }\n    // Detect IE platform preview.\n    else if (name == 'IE' && useFeatures) {\n      try {\n        if (context.external === null) {\n          description.unshift('platform preview');\n        }\n      } catch(e) {\n        description.unshift('embedded');\n      }\n    }\n    // Detect BlackBerry OS version.\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\n          version\n        )) {\n      data = [data, /BB10/.test(ua)];\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n      version = null;\n    }\n    // Detect Opera identifying/masking itself as another browser.\n    // http://www.opera.com/support/kb/view/843/\n    else if (this != forOwn && product != 'Wii' && (\n          (useFeatures && opera) ||\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\n          (name == 'IE' && (\n            (os && !/^Win/.test(os) && version > 5.5) ||\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\n            version == 8 && !/\\bTrident\\b/.test(ua)\n          ))\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n      if (reOpera.test(name)) {\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n          os = null;\n        }\n        data = 'identify' + data;\n      }\n      // When \"masking\", the UA contains only the other browser's name.\n      else {\n        data = 'mask' + data;\n        if (operaClass) {\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n        } else {\n          name = 'Opera';\n        }\n        if (/\\bIE\\b/.test(data)) {\n          os = null;\n        }\n        if (!useFeatures) {\n          version = null;\n        }\n      }\n      layout = ['Presto'];\n      description.push(data);\n    }\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n      // Nightly builds are postfixed with a \"+\".\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      }\n      // Clear incorrect browser versions.\n      else if (version == data[1] ||\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n        version = null;\n      }\n      // Use the full Chrome version when available.\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n      // Detect Blink layout engine.\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      }\n      // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n      if (!useFeatures || (!likeChrome && !data[1])) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      }\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n      // Obscure version for some Safari 1-2 releases.\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      }\n    }\n    // Detect Opera desktop modes.\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    }\n    // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n      description.unshift('desktop mode');\n      name = 'Chrome Mobile';\n      version = null;\n\n      if (/\\bOS X\\b/.test(os)) {\n        manufacturer = 'Apple';\n        os = 'iOS 4.3+';\n      } else {\n        os = null;\n      }\n    }\n    // Strip incorrect OS versions.\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\n        ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    }\n    // Add layout engine.\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\n        /Browser|Lunascape|Maxthon/.test(name) ||\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    }\n    // Combine contextual information.\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    }\n    // Append manufacturer to description.\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    }\n    // Append product to description.\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    }\n    // Parse the OS into an object.\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function() {\n          var version = this.version;\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    }\n    // Add browser/OS architecture.\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n      if (\n          name && (/\\bWOW64\\b/i.test(ua) ||\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\n      ) {\n        description.unshift('32-bit');\n      }\n    }\n    // Chrome 39 and above on OS X is always 64-bit.\n    else if (\n        os && /^OS X/.test(os.family) &&\n        name == 'Chrome' && parseFloat(version) >= 39\n    ) {\n      os.architecture = 64;\n    }\n\n    ua || (ua = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n    var platform = {};\n\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.description = ua;\n\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.layout = layout && layout[0];\n\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.manufacturer = manufacturer;\n\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.name = name;\n\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.prerelease = prerelease;\n\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.product = product;\n\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.ua = ua;\n\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.version = name && version;\n\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n    platform.os = os || {\n\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\n       * \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function() { return 'null'; }\n    };\n\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n    if (platform.name) {\n      description.unshift(name);\n    }\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n    return platform;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export platform.\n  var platform = parse();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform;\n\n    // Define as an anonymous module so platform can be aliased through path mapping.\n    define(function() {\n      return platform;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for CommonJS support.\n    forOwn(platform, function(value, key) {\n      freeExports[key] = value;\n    });\n  }\n  else {\n    // Export to the global object.\n    root.platform = platform;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/platform/platform.js\n// module id = 5\n// module chunks = 0","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/amd-define.js\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Æ’\",\"commonjs\":\"flavor-js\",\"commonjs2\":\"flavor-js\",\"amd\":\"flavor-js\"}\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}